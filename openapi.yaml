openapi: 3.0.1
info:
  title: Zanibal Capital Market
  description: These APIs are used to manage clients, securities, workflow, market data and transactions on the platform
  contact:
    name: Zanibal Engineering
    url: https://www.zanibal.com
    email: engineering@zanibal.com
  license:
    name: Zanibal LLC
    url: https://www.zanibal.com
  version: v8.3.23
externalDocs:
  description: Zanibal Capital Market API Documentation
  url: https://zaniballlc.stoplight.io/docs/efinance/
servers:
  - url: https://zas-dev.zanibal.com
    description: Sandbox
  - url: https://bo-demo.zanibal.com
    description: Production
tags:
  - name: Clients
    description: APIs for managing partner records
  - name: Finance
    description: APIs for managing customer financial transactions
  - name: Engagement & Sales
    description: APIs for customer relationship management and sales force automation
  - name: Market Data
    description: APIs for retrieving market data
  - name: Trade & Invest
    description: APIs for trading and asset management transactions
  - name: Security & Workflow
    description: APIs for managing security and workflow on the platform
paths:
  /api/v1/partner/customer/update:
    put:
      tags:
        - Clients
      summary: Update a customer record
      description: Update a customer record
      operationId: updateCustomerAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MCustomer'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/partner/customer/update-with-approval:
    put:
      tags:
        - Clients
      summary: Update a customer record using the approval workflow
      description: Update a customer record using the approval workflow
      operationId: updateCustomerAccountWithApproval
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MCustomer'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/partner/customer/update-fin-inst-id:
    put:
      tags:
        - Clients
      summary: Update the financial institution property for a customer record
      description: Update the financial institution property for a customer record
      operationId: updateCustomerFinInstId
      parameters:
        - name: clientId
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: finInstId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
      deprecated: true
  /api/v1/partner/customer/last-login/update/id/{id}:
    put:
      tags:
        - Clients
      summary: Update the last login property for a customer record
      description: Update the last login property for a customer record
      operationId: updateCustomerLastLogin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: ip
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/watchlist/update:
    put:
      tags:
        - Trade & Invest
      summary: Update a watch list
      description: Update a watch list
      operationId: updateWatchList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MWatchList'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/watchlist/delete-security/{watchListId}/{marketId}/{secId}:
    put:
      tags:
        - Trade & Invest
      summary: Remove a security from a watch list
      description: Remove a security from a watch list
      operationId: removeSecurityWithNameFromWatchList
      parameters:
        - name: watchListId
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: marketId
          in: path
          required: true
          schema:
            type: string
        - name: secId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/watchlist/add-security/{watchListId}/{marketId}/{secId}:
    put:
      tags:
        - Trade & Invest
      summary: Add a security to a watch list
      description: Add a security to a watch list
      operationId: addSecurityWithNameToWatchList
      parameters:
        - name: watchListId
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: marketId
          in: path
          required: true
          schema:
            type: string
        - name: secId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/tradeorder/update:
    put:
      tags:
        - Trade & Invest
      summary: Update an open trade order
      description: Update an open trade order
      operationId: updateTradeOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MTradeOrder'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/tradeorder/cancel/id/{id}:
    put:
      tags:
        - Trade & Invest
      summary: Cancel a trade order
      description: Cancel a trade order
      operationId: cancelTradeOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/terminstrument/terminate:
    put:
      tags:
        - Trade & Invest
      summary: Terminate a term instrument transaction
      description: Terminate a term instrument transaction
      operationId: terminateTermInstrumentTransaction
      parameters:
        - name: t
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: d
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/terminstrument/post/{id}:
    put:
      tags:
        - Trade & Invest
      summary: Post a term instrument transaction
      description: Post a term instrument transaction
      operationId: postTermInstrumentTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/tbill/update:
    put:
      tags:
        - Trade & Invest
      summary: Update a discounted instrument transaction
      description: Update a discounted instrument transaction
      operationId: updateTBillTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MTBillTransaction'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/tbill/terminate/id/{id}:
    put:
      tags:
        - Trade & Invest
      summary: Terminate a discounted instrument transaction
      description: Terminate a discounted instrument transaction
      operationId: terminateTBillTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: dc
          in: query
          required: false
          schema:
            type: string
        - name: fv
          in: query
          required: false
          schema:
            type: number
        - name: dr
          in: query
          required: false
          schema:
            type: number
        - name: td
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/tbill/post/{id}:
    put:
      tags:
        - Trade & Invest
      summary: Post a discounted instrument transaction
      description: Post a discounted instrument transaction
      operationId: postTBillTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/tbill/cancel/id/{id}:
    put:
      tags:
        - Trade & Invest
      summary: Cancel a discounted instrument transaction
      description: Cancel a discounted instrument transaction
      operationId: cancelTBillTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/portfolio/account/update:
    put:
      tags:
        - Trade & Invest
      summary: Update a portfolio trading account number
      description: Update a portfolio trading account number
      operationId: updatePortfolioWithName
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: chnNumber
          in: query
          required: true
          schema:
            type: string
        - name: accountNo
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/fundtransaction/post/{id}:
    put:
      tags:
        - Trade & Invest
      summary: Post a fund transaction
      description: Post a fund transaction
      operationId: postFundTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/amcontractnote/update:
    put:
      tags:
        - Trade & Invest
      summary: Update a third party broker contract note
      description: Update a third party broker contract note
      operationId: updateAMContractNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MAMTradeContractNote'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/amcontractnote/post/id/{id}:
    put:
      tags:
        - Trade & Invest
      summary: Post a third party broker contract note
      description: Post a third party broker contract note
      operationId: postAMContractNote
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/amcontractnote/cancel/id/{id}:
    put:
      tags:
        - Trade & Invest
      summary: Cancel a third party broker contract note
      description: Cancel a third party broker contract note
      operationId: cancelAMContractNote
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/amcontractnote/approve/id/{id}:
    put:
      tags:
        - Trade & Invest
      summary: Approve a third party broker contract note
      description: Approve a third party broker contract note
      operationId: approveAMContractNote
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/finance/cash-transaction/post/number/{number}:
    put:
      tags:
        - Finance
      summary: Post a customer cash transaction using the transaction number
      description: Post a customer cash transaction using the transaction number
      operationId: postPartnerCashTransactionByNumber
      parameters:
        - name: number
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/finance/cash-transaction/post/id/{id}:
    put:
      tags:
        - Finance
      summary: Post a customer cash transaction using the transaction ID
      description: Post a customer cash transaction using the transaction ID
      operationId: postPartnerCashTransactionById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/whatsapp/update:
    put:
      tags:
        - Engagement & Sales
      summary: Update a WhatsApp record
      description: Update an WhatsApp record
      operationId: updateWhatsApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhatsAppWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/task/update:
    put:
      tags:
        - Engagement & Sales
      summary: Update a task record
      description: Update a task record
      operationId: updateTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/target-list/update:
    put:
      tags:
        - Engagement & Sales
      summary: Update a target list record
      description: Update a target list record
      operationId: updateTargetList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetListWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/sms/update:
    put:
      tags:
        - Engagement & Sales
      summary: Update an sms record
      description: Update an sms record
      operationId: updateSms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/project/update:
    put:
      tags:
        - Engagement & Sales
      summary: Update a project record
      description: Update a project record
      operationId: updateProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/project-task/update:
    put:
      tags:
        - Engagement & Sales
      summary: Update a project task record
      description: Update a project task record
      operationId: updateProjectTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTaskWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/opportunity/update:
    put:
      tags:
        - Engagement & Sales
      summary: Update an opportunity record
      description: Update an opportunity record
      operationId: updateOpportunity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpportunityWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/note/update:
    put:
      tags:
        - Engagement & Sales
      summary: Update a note record
      description: Update a note record
      operationId: updateNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/lead/update:
    put:
      tags:
        - Engagement & Sales
      summary: Update a lead record
      description: Update a lead record
      operationId: updateLead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/email/update:
    put:
      tags:
        - Engagement & Sales
      summary: Update an email record
      description: Update an email record
      operationId: updateEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/contact/update:
    put:
      tags:
        - Engagement & Sales
      summary: Update a contact record
      description: Update a contact record
      operationId: updateContact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/case/update:
    put:
      tags:
        - Engagement & Sales
      summary: Update a case record
      description: Update a case record
      operationId: updateCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/campaign/update:
    put:
      tags:
        - Engagement & Sales
      summary: Update a campaign record
      description: Update a campaign record
      operationId: updateCampaign
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/call/update:
    put:
      tags:
        - Engagement & Sales
      summary: Update a call record
      description: Update a call record
      operationId: updateCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/security/workflow/start:
    post:
      tags:
        - Security & Workflow
      summary: Start a new process instance on the workflow engine
      description: Start a new process instance on the workflow engine
      operationId: startWorkflow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MWorkflowRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/security/workflow-status-update:
    post:
      tags:
        - Security & Workflow
      summary: Update the status of a workflow from engine events
      description: Update the status of a workflow from engine events
      operationId: updateWorkflowStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MWFStatusUpdateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/security/workflow-notification:
    post:
      tags:
        - Security & Workflow
      summary: Send a workflow assignment notification from engine events
      description: Send a workflow assignment notification from engine events
      operationId: sendWfAssignmentNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MWFNotificationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/security/workflow-document-update:
    post:
      tags:
        - Security & Workflow
      summary: Update a business document with data from workflow engine events
      description: Update a business document with data from workflow engine events
      operationId: updateWorkflowDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MWFStatusUpdateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/security/update-customer-password:
    post:
      tags:
        - Security & Workflow
      summary: Update a customers password
      description: Update a customers password
      operationId: updateCustomerPassword
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - np
                - un
              type: object
              properties:
                un:
                  type: string
                op:
                  type: string
                np:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/security/request/access-token:
    post:
      tags:
        - Security & Workflow
      summary: Request an access token
      description: Request an access token
      operationId: requestAccessToken
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - password
                - username
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                type: object
  /api/v1/security/refresh/access-token:
    post:
      tags:
        - Security & Workflow
      summary: Refresh an access token
      description: Refresh an access token
      operationId: refreshAccessToken
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - refresh_token
              type: object
              properties:
                refresh_token:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                type: object
  /api/v1/security/login/customer:
    post:
      tags:
        - Security & Workflow
      summary: Login a customer
      description: Login a customer
      operationId: loginCustomer
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - password
                - username
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/security/login/agent:
    post:
      tags:
        - Security & Workflow
      summary: Login an agent
      description: Login an agent
      operationId: loginAgent
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - password
                - username
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/security/generate-passcode:
    post:
      tags:
        - Security & Workflow
      summary: Generate and send a validation passcode
      description: Generate and send a validation passcode
      operationId: generatePasscode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MPassCodeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MPassCodeResponse'
  /api/v1/partner/customer/create:
    post:
      tags:
        - Clients
      summary: Create a customer record
      description: Create a customer record
      operationId: createCustomerAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MCustomer'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/watchlist/create:
    post:
      tags:
        - Trade & Invest
      summary: Create a new watch list
      description: Create a new watch list
      operationId: createWatchList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MWatchList'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/tradeorder/validate:
    post:
      tags:
        - Trade & Invest
      summary: Validate a trade order
      description: Validate a trade order
      operationId: validateTradeOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MTradeOrder'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/tradeorder/submit:
    post:
      tags:
        - Trade & Invest
      summary: Submit a new trade order
      description: Submit a new trade order
      operationId: submitTradeOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MTradeOrder'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/terminstrument/submit:
    post:
      tags:
        - Trade & Invest
      summary: Create a new term instrument transaction
      description: Create a new term instrument transaction
      operationId: submitTermInstrument
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MTermInstrument'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/tbill/submit:
    post:
      tags:
        - Trade & Invest
      summary: Create a new discounted instrument transaction
      description: Create a new discounted instrument transaction
      operationId: submitTBillTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MTBillTransaction'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/portfolio/create:
    post:
      tags:
        - Trade & Invest
      summary: Create a new investment portfolio
      description: Create a new investment portfolio
      operationId: createPortfolioAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MPortfolio'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/fundtransaction/validate:
    post:
      tags:
        - Trade & Invest
      summary: Validate a fund transaction
      description: Validate a fund transaction
      operationId: validateFundTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFundTransaction'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/fundtransaction/submit:
    post:
      tags:
        - Trade & Invest
      summary: Create a new fund transaction
      description: Create a new fund transaction
      operationId: submitFundTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFundTransaction'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/order/fundtransaction/submit/get-cash-account:
    post:
      tags:
        - Trade & Invest
      summary: Create a new cash account and fund transaction
      description: Create a new cash account and fund transaction
      operationId: submitFundTransactionAndGetCashAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFundTransaction'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MFundTransaction'
  /api/v1/order/amcontractnote/create:
    post:
      tags:
        - Trade & Invest
      summary: Create a third party broker contract note
      description: Create a third party broker contract note
      operationId: createAMContractNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MAMTradeContractNote'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/finance/post-cash-transaction/client/number:
    post:
      tags:
        - Finance
      summary: Create and post a cash transaction for a customer using the customer number
      description: Create and post a cash transaction for a customer using the customer number
      operationId: postCashTransactionWithClientNumber
      parameters:
        - name: c
          in: query
          required: true
          schema:
            type: string
        - name: t
          in: query
          required: false
          schema:
            type: string
        - name: a
          in: query
          required: true
          schema:
            minimum: 0
            type: number
        - name: p
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/finance/cashaccount/terminstrument/create:
    post:
      tags:
        - Finance
      summary: Create a term instrument cash account
      description: Create a term instrument cash account
      operationId: createTermInstrumentCashAccount
      parameters:
        - name: c
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: p
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/finance/cashaccount/portfolio/update:
    post:
      tags:
        - Finance
      summary: Update a portfolio cash account
      description: Update a portfolio cash account
      operationId: updatePortfolioCashAccount
      parameters:
        - name: p
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: a
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/finance/cashaccount/portfolio/create:
    post:
      tags:
        - Finance
      summary: Create a portfolio cash account for a specific currency
      description: Create a portfolio cash account for a specific currency
      operationId: createPortfolioCashAccountWithCurrency
      parameters:
        - name: p
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: t
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: c
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/finance/cashaccount/fund/create:
    post:
      tags:
        - Finance
      summary: Create a new fund cash account
      description: Create a new fund cash account
      operationId: createFundCashAccount
      parameters:
        - name: c
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: p
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/finance/cashaccount/customer/create:
    post:
      tags:
        - Finance
      summary: Create a customer cash account
      description: Create a customer cash account
      operationId: createTermInstrumentCashAccount_1
      parameters:
        - name: c
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: p
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: 'y'
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/finance/cash-transaction/payment/create:
    post:
      tags:
        - Finance
      summary: Create a customer cash transaction for the instant withdrawal product
      description: Create a customer cash transaction for the instant withdrawal product
      operationId: createPartnerCashTransactionWithPaymentOption
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MPartnerCashTransaction'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/finance/cash-transaction/create:
    post:
      tags:
        - Finance
      summary: Create a customer cash transaction
      description: Create a customer cash transaction
      operationId: createPartnerCashTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MPartnerCashTransaction'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/whatsapp/send:
    post:
      tags:
        - Engagement & Sales
      summary: Send a WhatsApp message
      description: Send a WhatsApp message
      operationId: sendWhatsApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhatsAppWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/whatsapp/create:
    post:
      tags:
        - Engagement & Sales
      summary: Create a WhatsApp record
      description: Create an WhatsApp record
      operationId: createWhatsApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhatsAppWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/task/create:
    post:
      tags:
        - Engagement & Sales
      summary: Create a task record
      description: Create a task record
      operationId: createTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/target-list/create:
    post:
      tags:
        - Engagement & Sales
      summary: Create a target list record
      description: Create a target list record
      operationId: createTargetList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetListWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/sms/send:
    post:
      tags:
        - Engagement & Sales
      summary: Send an sms message
      description: Send an sms message
      operationId: sendSms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/sms/create:
    post:
      tags:
        - Engagement & Sales
      summary: Create an sms record
      description: Create an sms record
      operationId: createSms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/project/create:
    post:
      tags:
        - Engagement & Sales
      summary: Create a project record
      description: Create a project record
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/project-task/create:
    post:
      tags:
        - Engagement & Sales
      summary: Create a project task record
      description: Create a project task record
      operationId: createProjectTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTaskWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/opportunity/create:
    post:
      tags:
        - Engagement & Sales
      summary: Create an opportunity record
      description: Create an opportunity record
      operationId: createOpportunity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpportunityWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/note/create:
    post:
      tags:
        - Engagement & Sales
      summary: Create a note record
      description: Create a note record
      operationId: createNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/lead/create:
    post:
      tags:
        - Engagement & Sales
      summary: Create a lead record
      description: Create a lead record
      operationId: createLead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/lead/convert/id/{id}/{delete}:
    post:
      tags:
        - Engagement & Sales
      summary: Convert a lead to a customer and delete the lead
      description: Convert a lead to a customer and delete the lead
      operationId: convertLeadById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: delete
          in: path
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/email/send:
    post:
      tags:
        - Engagement & Sales
      summary: Send an email message
      description: Send an email message
      operationId: sendEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/email/create:
    post:
      tags:
        - Engagement & Sales
      summary: Create an email record
      description: Create an email record
      operationId: createEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/contact/create:
    post:
      tags:
        - Engagement & Sales
      summary: Create a contact record
      description: Create a contact record
      operationId: createContact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/case/create:
    post:
      tags:
        - Engagement & Sales
      summary: Create a case record
      description: Create a case record
      operationId: createCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/campaign/create:
    post:
      tags:
        - Engagement & Sales
      summary: Create a campaign record
      description: Create a campaign record
      operationId: createCampaign
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/call/create:
    post:
      tags:
        - Engagement & Sales
      summary: Create a call record
      description: Create a call record
      operationId: createCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallWS'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/security/validate-passcode/{id}/{passCode}:
    get:
      tags:
        - Security & Workflow
      summary: Validate a passcode
      description: Validate a passcode
      operationId: validatePasscode
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: passCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                type: boolean
  /api/v1/security/recover-password/username/{username}:
    get:
      tags:
        - Security & Workflow
      summary: Recover a customers username
      description: Recover a customers username
      operationId: recoverPassword
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/security/portal-config:
    get:
      tags:
        - Security & Workflow
      summary: Retrieve configuration for the portal
      description: Retrieve configuration for the portal
      operationId: getPortalConfiguration
      parameters:
        - name: tenantId
          in: query
          required: false
          schema:
            type: string
            default: '0'
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MPortalConfig'
  /api/v1/security/picklist/name/{name}:
    get:
      tags:
        - Security & Workflow
      summary: Retrieve a system picklist
      description: Retrieve a system picklist
      operationId: getPickListByCode
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MPickList'
  /api/v1/security/logo:
    get:
      tags:
        - Security & Workflow
      summary: Retrieve the logo for the portal
      description: Retrieve the logo for the portal
      operationId: getPortalLogo
      responses:
        '200':
          description: OK
          content:
            image/png; charset=UTF-8:
              schema:
                type: array
                items:
                  type: string
                  format: byte
  /api/v1/security/health:
    get:
      tags:
        - Security & Workflow
      summary: Check the health of the system
      description: Check the health of the system
      operationId: checkApplicationHealth
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/AppHealthView'
  /api/v1/security/generate-passcode/{username}:
    get:
      tags:
        - Security & Workflow
      summary: Generate a password for a customer username
      description: Generate a password for a customer username
      operationId: generatePasscodeForUserName
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MPassCodeResponse'
  /api/v1/security/customerandimages/name/{name}:
    get:
      tags:
        - Security & Workflow
      summary: Retrieve a customer and KYC documents with the customer number
      description: Retrieve a customer and KYC documents with the customer number
      operationId: getCustomerAndImagesWithName
      parameters:
        - name: X-Auth-Token
          in: header
          required: false
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MCustomer'
  /api/v1/security/customerandimages/id/{id}:
    get:
      tags:
        - Security & Workflow
      summary: Retrieve a customer and KYC documents with the username
      description: Retrieve a customer and KYC documents with the username
      operationId: getCustomerAndImagesWithId
      parameters:
        - name: X-Auth-Token
          in: header
          required: false
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MCustomer'
  /api/v1/security/customer/username/{username}:
    get:
      tags:
        - Security & Workflow
      summary: Retrieve a customer profile with the username
      description: Retrieve a customer profile with the username
      operationId: getCustomerWithUsername
      parameters:
        - name: X-Auth-Token
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MCustomer'
  /api/v1/security/customer/referral-code/{code}:
    get:
      tags:
        - Security & Workflow
      summary: Retrieve a customer with the referral code
      description: Retrieve a customer with the referral code
      operationId: getCustomerWithReferralCode
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MCustomer'
  /api/v1/security/customer/is-valid/username/{username}:
    get:
      tags:
        - Security & Workflow
      summary: Validate a customers username
      description: Validate a customers username
      operationId: validateCustomerUsername
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/security/customer/is-valid/cell-phone/{cellPhone}:
    get:
      tags:
        - Security & Workflow
      summary: Validate a customers cell phone
      description: Validate a customers cell phone
      operationId: validateCustomerCellPhone
      parameters:
        - name: cellPhone
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/security/customer/id/{id}:
    get:
      tags:
        - Security & Workflow
      summary: Retrieve a customer with the ID
      description: Retrieve a customer with the ID
      operationId: getCustomerWithId
      parameters:
        - name: X-Auth-Token
          in: header
          required: false
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MCustomer'
  /api/v1/security/customer/customer-number/{number}:
    get:
      tags:
        - Security & Workflow
      summary: Retrieve a customer with the customer number
      description: Retrieve a customer with the customer number
      operationId: getCustomerWithCustomerNumber
      parameters:
        - name: X-Auth-Token
          in: header
          required: false
          schema:
            type: string
        - name: number
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MCustomer'
  /api/v1/security/customer/cell-phone/{cellPhone}:
    get:
      tags:
        - Security & Workflow
      summary: Retrieve a customer with the cell phone number
      description: Retrieve a customer with the cell phone number
      operationId: getCustomerWithCellPhone
      parameters:
        - name: X-Auth-Token
          in: header
          required: false
          schema:
            type: string
        - name: cellPhone
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MCustomer'
  /api/v1/security/agent/username/{username}:
    get:
      tags:
        - Security & Workflow
      summary: Retrieve an agent record with the username
      description: Retrieve an agent record with the username
      operationId: getAgentWithUsername
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MAgent'
  /api/v1/research/security/list/search:
    get:
      tags:
        - Market Data
      summary: Search for securities using the supported query parameters
      description: Search for securities using the supported query parameters
      operationId: getSecurityList
      parameters:
        - name: t
          in: query
          required: false
          schema:
            type: string
            description: 'The query type - use the "l" value to list the results and "s" to perform a search. Note that if you specify "s", you should also send the "q" paramater '
            example: l
            default: l
        - name: x
          in: query
          required: false
          schema:
            type: string
            description: The exchange identifier -  Specify an exchange to limit your search to symbols that trade only in that market If not specified all exchanges are searched. Note that you can also specify the exchange in the "q" parameter by using the "X:Symbol" notation
            example: NGX
        - name: q
          in: query
          required: false
          schema:
            type: string
            description: The search parameter  - Specify the string to use for the search and if you want to restrict the search to a specific exchange use the "X:Symbol" notation where X is the exchange code and "Symbol" is the symbol to search. Note that the API performs a similarity search so that a "q" value like "BANK"  will match "ACCESS BANK" and "ZENITH BANK"
            example: ACCESS
        - name: b
          in: query
          required: false
          schema:
            type: integer
            description: The begin index and if this is not specified the API will return results starting with the first value ie 0
            format: int32
            example: 0
            default: 0
        - name: c
          in: query
          required: false
          schema:
            type: integer
            description: The number of records to return or the page size. If not specified the API will return all matching records
            format: int32
            example: 25
        - name: od
          in: query
          required: false
          schema:
            type: string
            description: The order direction. The valid values are "ASC" and "DESC". If not specified the API will default to ASC
            example: ASC
            default: ASC
        - name: ob
          in: query
          required: false
          schema:
            type: string
            description: The field to order by. If this is not specified, it will use the "name" field.
            example: name
            default: name
        - name: s
          in: query
          required: false
          schema:
            type: string
            description: The search scope. Valid values are "A", "B", "E" for All, Bonds & Equity respectively. If not specified, the API will  default to "A"
            example: '1000'
            default: A
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/research/security/list/active:
    get:
      tags:
        - Market Data
      summary: List active securities
      description: List active securities
      operationId: getActiveInstruments
      parameters:
        - name: x
          in: query
          required: true
          schema:
            type: string
            description: The exchange code
            example: NGX
        - name: t
          in: query
          required: false
          schema:
            type: string
            description: The security type. This has to be EQUITY or BOND
            example: EQUITY
            default: EQUITY
        - name: b
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            description: 'The offset or start value for your query '
            format: int32
            example: 0
        - name: s
          in: query
          required: true
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            description: The number of records to return in the query
            format: int32
            example: 25
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MSecurity'
  /api/v1/research/get-security-overview/id/{id}:
    get:
      tags:
        - Market Data
      summary: Retrieve a consolidated research view for a security using the ID
      description: Retrieve a consolidated research view for a security using the ID
      operationId: getSecurityOverviewWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MSecurityOverview'
  /api/v1/research/get-security-overview/code/{code}/{exchange}:
    get:
      tags:
        - Market Data
      summary: Retrieve a consolidated research view for a security using the symbol
      description: Retrieve a consolidated research view for a security using the symbol
      operationId: getSecurityOverviewWithCodeAndExchange
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
        - name: exchange
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MSecurityOverview'
  /api/v1/research/get-sector-allocation:
    get:
      tags:
        - Market Data
      summary: Generate the equity sector allocation for a portfolio
      description: Generate the equity sector allocation for a portfolio
      operationId: getSectorAllocation
      parameters:
        - name: id
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            description: The portfolio identifier
            format: int64
            example: 1000
        - name: type
          in: query
          required: true
          schema:
            type: string
            description: The context of the request which can either be 'P' for the portfolio or 'C' for customer. When 'P' is specified the API will return data for the specified portfolio. When 'C' is specified, the API will return data for all portfolios that belong to that client ID.
            example: P
        - name: cash
          in: query
          required: false
          schema:
            type: boolean
            description: Indicates if the cash balance should be included in the sector allocation report
            example: false
            default: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: object
  /api/v1/research/get-prices:
    get:
      tags:
        - Market Data
      summary: Retrieve historical market data for a security
      description: Retrieve historical market data for a security
      operationId: getPrices
      parameters:
        - name: s
          in: query
          required: true
          schema:
            type: string
            description: The security ID
            example: ACCESS
        - name: x
          in: query
          required: true
          schema:
            type: string
            description: The exchange identifier
            example: NGX
        - name: f
          in: query
          required: true
          schema:
            type: string
            description: The list of fields to return seperated by commas.
            example: d,o,h,l,c,v,a
        - name: i
          in: query
          required: false
          schema:
            type: integer
            description: The offset timestamp in milli seconds. This should  be used to specify the start date and time and if not specified, the current date is used.
            format: int64
            example: 2390900011
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: number
                    format: double
  /api/v1/research/get-news-article/id/{id}:
    get:
      tags:
        - Market Data
      summary: Retrieve a news article
      description: Retrieve a news article
      operationId: getMarketNewsItemWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MSecurityNews'
  /api/v1/research/get-marketnews:
    get:
      tags:
        - Market Data
      summary: Retrieve relevant market news for a portfolio
      description: Retrieve relevant market news for a portfolio
      operationId: getMarketNews
      parameters:
        - name: s
          in: query
          required: true
          schema:
            type: string
            description: The internal security ID
            example: '1000'
        - name: portfolioId
          in: query
          required: true
          schema:
            type: integer
            description: The portfolio ID
            format: int64
            example: 1000
        - name: c
          in: query
          required: true
          schema:
            type: integer
            description: The number of records to return
            format: int32
            example: 1000
            default: 25
        - name: b
          in: query
          required: false
          schema:
            type: integer
            description: The field to return for the body type. '1' will return the short text and '2' will return the full text
            format: int32
            example: 1
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/partner/portfolio-valuation-for-date-range/id/{id}:
    get:
      tags:
        - Clients
      summary: Retrieve the portfolio valuation for a date range
      description: Retrieve the portfolio valuation for a date range
      operationId: getPortfolioValuationForDateRangeWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: sd
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ed
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: cu
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/InvstMgtValuationTO'
  /api/v1/partner/portfolio-trade-balance/id/{id}:
    get:
      tags:
        - Clients
      summary: Retrieve the trade balance for a portfolio using the portfolio ID
      description: Retrieve the trade balance for a portfolio using the portfolio ID
      operationId: getPortfolioTradeBalanceWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Money'
  /api/v1/partner/portfolio-investment-schedule/id/{id}:
    get:
      tags:
        - Clients
      summary: Retrieve the portfolio investment schedule records for a date range
      description: Retrieve the portfolio investment schedule records for a date range
      operationId: getPortfolioInvestmentScheduleForDateRangeWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: sd
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ed
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: cu
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/InvstMgtValuationTO'
  /api/v1/partner/customer/search:
    get:
      tags:
        - Clients
      summary: Search for customer records
      description: Search for customer records
      operationId: getPartnerCashAccountBalancesWithId
      parameters:
        - name: accountNo
          in: query
          required: false
          schema:
            type: string
        - name: accountName
          in: query
          required: false
          schema:
            type: string
        - name: phoneNumber
          in: query
          required: false
          schema:
            type: string
        - name: emailAddress
          in: query
          required: false
          schema:
            type: string
        - name: startRecord
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: recordCount
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 25
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MCustomer'
  /api/v1/partner/customer/new/list:
    get:
      tags:
        - Clients
      summary: Retrieve the list of new customers
      description: Retrieve the list of new customers
      operationId: getNewCustomerList
      parameters:
        - name: rd
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MCustomer'
  /api/v1/partner/customer/list:
    get:
      tags:
        - Clients
      summary: Retrieve the list of customers using the specified query parameters
      description: Retrieve the list of customers using the specified query parameters
      operationId: getAgentLedgerEntriesWithId
      parameters:
        - name: orderBy
          in: query
          required: false
          schema:
            type: string
            default: label
        - name: orderDir
          in: query
          required: false
          schema:
            type: string
            default: ASC
        - name: start
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 25
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MCustomerTO'
  /api/v1/partner/customer/list/ledger-entries:
    get:
      tags:
        - Clients
      summary: Retrieve a customer ledger entries
      description: Retrieve a customer ledger entries
      operationId: getCustomerLedgerEntriesWithId
      parameters:
        - name: customerId
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: start
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: count
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MFiLedger'
  /api/v1/partner/customer/id/{id}:
    get:
      tags:
        - Clients
      summary: Retrieve a customer record
      description: Retrieve a customer record
      operationId: getCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MCustomer'
  /api/v1/partner/customer/get-posted-cash-receipt-value-by-date-range:
    get:
      tags:
        - Clients
      summary: Retrieve posted receipt transactions for a date range
      description: Retrieve posted receipt transactions for a date range
      operationId: getPostedCashReceiptValueByDateRange
      parameters:
        - name: clientId
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: accountId
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                type: number
  /api/v1/partner/customer/get-posted-cash-payment-value-by-date-range:
    get:
      tags:
        - Clients
      summary: Retrieve posted payment transactions for a date range
      description: Retrieve posted payment transactions for a date range
      operationId: getPostedCashPaymentValueByDateRange
      parameters:
        - name: clientId
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: accountId
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                type: number
  /api/v1/partner/customer-valuation:
    get:
      tags:
        - Clients
      summary: Retrieve the customer valuation records for a date range
      description: Retrieve the customer valuation records for a date range
      operationId: getValuationRecords
      parameters:
        - name: c
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: sd
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ed
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: b
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: s
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MValuationTO'
  /api/v1/partner/customer-valuation-for-date-range/id/{id}:
    get:
      tags:
        - Clients
      summary: Retrieve the customer valuation for a date range
      description: Retrieve the customer valuation for a date range
      operationId: getCustomerValuationForDateRangeWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: sd
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ed
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: cu
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/InvstMgtValuationTO'
  /api/v1/partner/customer-validate/national-id/{number}:
    get:
      tags:
        - Clients
      summary: Validate a customer national ID number
      description: Validate a customer national ID number
      operationId: getCustomerLabelWithBVN
      parameters:
        - name: number
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain; charset=UTF-8:
              schema:
                type: boolean
  /api/v1/partner/customer-validate/bvn/{number}:
    get:
      tags:
        - Clients
      summary: Validate a customer BVN number
      description: Validate a customer BVN number
      operationId: validateCustomerBVN
      parameters:
        - name: number
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain; charset=UTF-8:
              schema:
                type: boolean
  /api/v1/partner/customer-trade-balance/id/{id}:
    get:
      tags:
        - Clients
      summary: Retrieve the trade balance for a customer using the customer ID
      description: Retrieve the trade balance for a customer using the customer ID
      operationId: getCustomerTradeBalanceWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Money'
  /api/v1/partner/customer-net-trade-balance/id/{id}:
    get:
      tags:
        - Clients
      summary: Retrieve the net trade balance
      description: Retrieve the net trade balance
      operationId: getCustomerNetTradeBalanceWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Money'
  /api/v1/partner/customer-label/customer-number/{number}:
    get:
      tags:
        - Clients
      summary: Retrieve the customer label
      description: Retrieve the customer label
      operationId: getCustomerLabelWithNumber
      parameters:
        - name: number
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain; charset=UTF-8:
              schema:
                type: string
  /api/v1/partner/customer-investment-schedule/id/{id}:
    get:
      tags:
        - Clients
      summary: Retrieve the customer investment schedule records for a date range
      description: Retrieve the customer investment schedule records for a date range
      operationId: getCustomerInvestmentScheduleForDateRangeWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: sd
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ed
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: cu
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/InvstMgtValuationTO'
  /api/v1/partner/customer-fin-inst-id/customer-number/{number}:
    get:
      tags:
        - Clients
      summary: Retrieve a financial institution number for a customer using the customer number
      description: Retrieve a financial institution number for a customer using the customer number
      operationId: getCustomerFinInstIDWithNumber
      parameters:
        - name: number
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain; charset=UTF-8:
              schema:
                type: string
  /api/v1/partner/customer-fin-inst-id/customer-id/{id}:
    get:
      tags:
        - Clients
      summary: Retrieve a financial institution number for a customer using the customer ID
      description: Retrieve a financial institution number for a customer using the customer ID
      operationId: getCustomerFinInstIDWithID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            text/plain; charset=UTF-8:
              schema:
                type: string
  /api/v1/partner/customer-current-balance/customer-number/{number}:
    get:
      tags:
        - Clients
      summary: Retrieve the cash balance for a customer using the customer number
      description: Retrieve the cash balance for a customer using the customer number
      operationId: getCustomerCurrentBalanceByName
      parameters:
        - name: number
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Money'
  /api/v1/partner/customer-current-balance/customer-id/{id}:
    get:
      tags:
        - Clients
      summary: Retrieve the cash balance for a customer using the customer ID
      description: Retrieve the cash balance for a customer using the customer ID
      operationId: getCustomerCurrentBalanceById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Money'
  /api/v1/partner/customer-credit-Limit/customer-id/{id}:
    get:
      tags:
        - Clients
      summary: Retrieve the credit limit for a customer using the customer ID
      description: Retrieve the credit limit for a customer using the customer ID
      operationId: getCustomeCreditLimitById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Money'
  /api/v1/partner/customer-commission-balance/id/{id}:
    get:
      tags:
        - Clients
      summary: Retrieve the available commission balance
      description: Retrieve the available commission balance
      operationId: getCustomerCommissionBalanceWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Money'
  /api/v1/partner/customer-available-balance/id/{id}:
    get:
      tags:
        - Clients
      summary: Retrieve the available cash balance
      description: Retrieve the available cash balance
      operationId: getCustomerAvailableBalanceWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Money'
  /api/v1/partner/cash-account-balances:
    get:
      tags:
        - Clients
      summary: Retrieve the customer cash account balances
      description: Retrieve the customer cash account balances
      operationId: getPartnerCashAccountBalancesWithId_1
      parameters:
        - name: clientId
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: valueDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: currency
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MFiAcctBalance'
  /api/v1/partner/agent/list/ledger-entries:
    get:
      tags:
        - Clients
      summary: Retrieve an agent ledger entries
      description: Retrieve an agent ledger entries
      operationId: getAgentLedgerEntriesWithId_1
      parameters:
        - name: agentId
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: start
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: count
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MFiLedger'
  /api/v1/order/watchlist/id/{id}:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve a watch list using the ID
      description: Retrieve a watch list using the ID
      operationId: getWatchListWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MWatchList'
  /api/v1/order/watchlist/customer/id/{id}:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve watch lists for a customer
      description: Retrieve watch lists for a customer
      operationId: findCustomerWatchLists
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MWatchList'
  /api/v1/order/tradeorderterm/list/active:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve order validation rules (order terms)
      description: Retrieve order validation rules (order terms)
      operationId: getActiveTradeOrderTerms
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/order/tradeorder/portfolio/list:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve orders for a portfolio
      description: Retrieve orders for a portfolio
      operationId: getTradeOrdersForPortfolio
      parameters:
        - name: p
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: b
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: c
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: s
          in: query
          required: false
          schema:
            type: string
        - name: sd
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ed
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MTradeOrderTO'
  /api/v1/order/tradeorder/find/id/{id}:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve a trade order
      description: Retrieve a trade order
      operationId: findTradeOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MTradeOrder'
  /api/v1/order/tradeorder/customer/sectype/list:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve orders for a portfolio for a specific asset class
      description: Retrieve orders for a portfolio for a specific asset class
      operationId: getCustomerOrdersBySecurityType
      parameters:
        - name: c
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: p
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: b
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: s
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: t
          in: query
          required: false
          schema:
            type: string
        - name: e
          in: query
          required: false
          schema:
            type: string
            default: EQUITY
        - name: sd
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ed
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/order/terminstrumenttype/list/active:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve active term instrument products
      description: Retrieve active term instrument products
      operationId: getActiveTermInstrumentTypes
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/order/terminstrument/find/id/{id}:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve a term instrument
      description: Retrieve a term instrument
      operationId: findTermInstrument
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MTermInstrument'
  /api/v1/order/terminstrument/customer/list:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve term instruments for a customer
      description: Retrieve term instruments for a customer
      operationId: findCustomerTermInstruments
      parameters:
        - name: c
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: b
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: s
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sd
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: t
          in: query
          required: false
          schema:
            type: string
        - name: u
          in: query
          required: false
          schema:
            type: string
        - name: ed
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/order/tbilltype/list/active:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve active discounted instrument products
      description: Retrieve active discounted instrument products
      operationId: getActiveTBillTypes
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/order/tbillbatch/list/open:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve open discounted instrument batches
      description: Retrieve open discounted instrument batches
      operationId: getOpenTBillBatches
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/order/tbill/id/{id}:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve a discounted instrument transaction
      description: Retrieve a discounted instrument transaction
      operationId: findTBillTransactionById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MTBillTransaction'
  /api/v1/order/tbill/holdings/id/{id}:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve discounted instruments for a customer
      description: Retrieve discounted instruments for a customer
      operationId: getCustomerTBillHoldingsWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/order/tbill/customer/list:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve discounted instrument transactions for a portfolio
      description: Retrieve discounted instrument transactions for a portfolio
      operationId: getTBillsForCustomer
      parameters:
        - name: c
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: b
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: s
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: t
          in: query
          required: false
          schema:
            type: string
        - name: e
          in: query
          required: false
          schema:
            type: string
        - name: sd
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ed
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/order/security/type/list/active:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve active instruments for a market and security type
      description: Retrieve active instruments for a market and security type
      operationId: getActiveSecuritiesByType
      parameters:
        - name: x
          in: query
          required: true
          schema:
            type: string
        - name: t
          in: query
          required: true
          schema:
            type: string
        - name: b
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: s
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/order/security/class/list/active:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve active instruments for a market and security class
      description: Retrieve active instruments for a market and security class
      operationId: getActiveSecuritiesByClass
      parameters:
        - name: x
          in: query
          required: true
          schema:
            type: string
        - name: t
          in: query
          required: true
          schema:
            type: string
        - name: b
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: s
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/order/portfolio/sendercompid/list:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve portfolios for a FIX SenderCompID
      description: Retrieve portfolios for a FIX SenderCompID
      operationId: getActivePortfoliosForSenderCompId
      parameters:
        - name: o
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: s
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/order/portfolio/reference/{name}:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve a portfolio using the reference number
      description: Retrieve a portfolio using the reference number
      operationId: getPortfolioWithReference
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MPortfolio'
  /api/v1/order/portfolio/margincall/id/{id}:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve margin calls for a portfolio
      description: Retrieve margin calls for a portfolio
      operationId: getPortfolioMarginCallsWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: begin
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: count
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: status
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/order/portfolio/list/{dateOffset}:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve active portfolios
      description: Retrieve active portfolios
      operationId: getActivePortfolios
      parameters:
        - name: dateOffset
          in: path
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/order/portfolio/id/{id}:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve a portfolio using the ID
      description: Retrieve a portfolio using the ID
      operationId: getPortfolioWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MPortfolio'
  /api/v1/order/portfolio/holdings/id/{id}:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve holdings for a portfolio
      description: Retrieve holdings for a portfolio
      operationId: getPortfolioHoldingsWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/order/portfolio/customer/id/{id}:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve portfolios for a customer
      description: Retrieve portfolios for a customer
      operationId: getPortfoliosForCustomerWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/order/fundtransaction/customer/list:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve fund transactions for a portfolio
      description: Retrieve fund transactions for a portfolio
      operationId: getFundTransactionsForCustomer
      parameters:
        - name: c
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: p
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: b
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: s
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: t
          in: query
          required: false
          schema:
            type: string
        - name: sd
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ed
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/order/fund/list/active:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve active fund products
      description: Retrieve active fund products
      operationId: getActiveFunds
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/order/customer/contractnote/id/{id}:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve contract notes for a customer
      description: Retrieve contract notes for a customer
      operationId: findCustomerContractNotes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: p
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: t
          in: query
          required: false
          schema:
            type: string
        - name: b
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: s
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sd
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ed
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/order/contractnote/list:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve contract notes
      description: Retrieve contract notes
      operationId: getAgentContractNotesWithId
      parameters:
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: start
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 25
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MTradeContractNoteTO'
  /api/v1/order/contractnote/all:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve contract notes
      description: Retrieve contract notes
      operationId: findAllContractNotes
      parameters:
        - name: b
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: s
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sd
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ed
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/order/amcontractnote/portfolio/list:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve third party broker contract notes for a portfolio
      description: Retrieve third party broker contract note for a portfolio
      operationId: findAMContractNoteForPortfolio
      parameters:
        - name: p
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: o
          in: query
          required: false
          schema:
            type: string
        - name: b
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: s
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sd
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ed
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/order/amcontractnote/find/id/{id}:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve a third party broker contract note
      description: Retrieve a third party broker contract note
      operationId: findAMContractNote
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MAMTradeContractNote'
  /api/v1/order/agent/list/contract-note/{agentId}:
    get:
      tags:
        - Trade & Invest
      summary: Retrieve contract notes for an agent
      description: Retrieve contract notes for an agent
      operationId: getAgentContractNotesWithId_1
      parameters:
        - name: agentId
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: start
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 25
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MTradeContractNoteTO'
  /api/v1/finance/paymentgateway/list/active:
    get:
      tags:
        - Finance
      summary: List configured payment processors
      description: List configured payment processors
      operationId: getActivePaymentGateways
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/finance/partner/cash-transaction/list:
    get:
      tags:
        - Finance
      summary: Retrieve cash transactions for a specified customer
      description: Retrieve cash transactions for a specified customer
      operationId: getCashTransactions
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: t
          in: query
          required: false
          schema:
            type: string
        - name: s
          in: query
          required: false
          schema:
            type: string
        - name: b
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: c
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sd
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ed
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/finance/glaccount/list/new:
    get:
      tags:
        - Finance
      summary: Retrieve GL accounts created after a specified date
      description: Retrieve GL accounts created after a specified date
      operationId: getNewGLFiAccts
      parameters:
        - name: c
          in: query
          description: The company ID. GL accounts mapped to this company will be included in the response.
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: rd
          in: query
          description: The reference date in 'yyyy-MM-dd' format. All GL accounts created after this date will be returned.
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/finance/filedger/list/date:
    get:
      tags:
        - Finance
      summary: Retrieve ledger entries for a date range
      description: Retrieve ledger entries for a date range
      operationId: getFiLedgerEntriesForDate
      parameters:
        - name: b
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: c
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sd
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: ed
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/finance/filedger/list/date/range:
    get:
      tags:
        - Finance
      summary: Retrieve ledger entries for a date range
      description: Retrieve ledger entries for a date range
      operationId: getFiLedgerEntriesForDateRange
      parameters:
        - name: b
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: c
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sd
          in: query
          description: The start date in 'yyyy-MM-dd' format
          required: false
          schema:
            type: string
            format: date-time
        - name: ed
          in: query
          description: The end date in 'yyyy-MM-dd' format
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
      deprecated: true
  /api/v1/finance/filedger/list/control:
    get:
      tags:
        - Finance
      summary: Retrieve control account ledger entries for a date range
      description: Retrieve control account ledger entries for a date range
      operationId: getControlAccountLedgerEntriesWithId
      parameters:
        - name: a
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: b
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: c
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sd
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: ed
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/finance/filedger/list/account/number:
    get:
      tags:
        - Finance
      summary: Get ledger entries for a cash account using the account number
      description: Get ledger entries for a cash account using the account number
      operationId: getFiLedgerEntriesForAccountNumber
      parameters:
        - name: a
          in: query
          required: true
          schema:
            type: string
        - name: b
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: c
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sd
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ed
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/finance/filedger/list/account/id:
    get:
      tags:
        - Finance
      summary: Get ledger entries for a cash  using the account ID
      description: Get ledger entries for a cash account the account ID
      operationId: getFiLedgerEntriesForAccountId
      parameters:
        - name: a
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: b
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: c
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sd
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ed
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/finance/cashaccount/list/new:
    get:
      tags:
        - Finance
      summary: Retrieve cash accounts created after a specified date
      description: Retrieve cash accounts created after a specified date
      operationId: getNewCustomerFiAccts
      parameters:
        - name: c
          in: query
          description: The company ID. Cash accounts mapped to this company will be included in the response.
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: rd
          in: query
          description: The reference date in 'yyyy-MM-dd' format. All client cash accounts created after this date will be returned.
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/finance/cashaccount/client/list:
    get:
      tags:
        - Finance
      summary: Retrieve cash accounts created after a specified date
      description: Retrieve cash accounts created after a specified date
      operationId: getNewCustomerFiAcctsDeprecated
      parameters:
        - name: c
          in: query
          description: The company ID. Cash accounts mapped to this company will be included in the response.
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: rd
          in: query
          description: The reference date in 'yyyy-MM-dd' format. All client cash accounts created after this date will be returned.
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
      deprecated: true
  /api/v1/finance/cash-transaction/verify-gw-status/id/{id}/{paymentId}:
    get:
      tags:
        - Finance
      summary: Verify a customer cash transaction status with a payment processor
      description: Verify a customer cash transaction status with a payment processor
      operationId: verifyTransactionStatusFromPaymentGateway
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
        - name: paymentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MPartnerCashTransaction'
  /api/v1/finance/cash-transaction/list:
    get:
      tags:
        - Finance
      summary: Query for customer cash transactions
      description: Query for customer cash transactions
      operationId: getCashTransactions_1
      parameters:
        - name: t
          in: query
          required: false
          schema:
            type: string
        - name: s
          in: query
          required: false
          schema:
            type: string
        - name: b
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: c
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sd
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ed
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/finance/cash-transaction/id/{id}:
    get:
      tags:
        - Finance
      summary: Get a customer cash transaction using the transaction ID
      description: Get a customer cash transaction using the transaction ID
      operationId: getCashTransactionWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MPartnerCashTransaction'
  /api/v1/finance/account/customer/id/{id}:
    get:
      tags:
        - Finance
      summary: Retrieve cash accounts for a customer using the customer ID
      description: Retrieve cash accounts for a customer using the customer ID
      operationId: getAccountsForCustomerWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/JSONDocumentTO'
  /api/v1/finance/account/cash-transaction/reference/{number}:
    get:
      tags:
        - Finance
      summary: Get a customer cash transaction using the reference number
      description: Get a customer cash transaction using the reference number
      operationId: getCashTransactionWithReference
      parameters:
        - name: number
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MPartnerCashTransaction'
  /api/v1/finance/account/cash-transaction/number/{number}:
    get:
      tags:
        - Finance
      summary: Post a customer cash transaction using the transaction number
      description: Post a customer cash transaction using the transaction number
      operationId: getCashTransactionWithNumber
      parameters:
        - name: number
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MPartnerCashTransaction'
  /api/v1/finance/account/balance/id/{id}:
    get:
      tags:
        - Finance
      summary: Get balance for a cash account
      description: Get balance for a cash account
      operationId: getAccountBalanceWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Money'
  /api/v1/crm/whatsapp/find/id/{id}:
    get:
      tags:
        - Engagement & Sales
      summary: Retrieve a WhatsApp record
      description: Retrieve an WhatsApp record
      operationId: getWhatsAppWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/WhatsAppWS'
  /api/v1/crm/task/find/id/{id}:
    get:
      tags:
        - Engagement & Sales
      summary: Retrieve a task record
      description: Retrieve a task record
      operationId: getTaskWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/TaskWS'
  /api/v1/crm/target-list/find/id/{id}:
    get:
      tags:
        - Engagement & Sales
      summary: Retrieve a target list record
      description: Retrieve a target list record
      operationId: getTargetListWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/TargetListWS'
  /api/v1/crm/sms/find/id/{id}:
    get:
      tags:
        - Engagement & Sales
      summary: Retrieve an sms record
      description: Retrieve an sms record
      operationId: getSmsWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/SmsWS'
  /api/v1/crm/project/find/id/{id}:
    get:
      tags:
        - Engagement & Sales
      summary: Retrieve a project record
      description: Retrieve a project record
      operationId: getProjectWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ProjectWS'
  /api/v1/crm/project-task/find/id/{id}:
    get:
      tags:
        - Engagement & Sales
      summary: Retrieve a project task record
      description: Retrieve a project task record
      operationId: getProjectTaskWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ProjectTaskWS'
  /api/v1/crm/opportunity/find/id/{id}:
    get:
      tags:
        - Engagement & Sales
      summary: Retrieve an opportunity record
      description: Retrieve an opportunity record
      operationId: getOpportunityWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/OpportunityWS'
  /api/v1/crm/note/find/id/{id}:
    get:
      tags:
        - Engagement & Sales
      summary: Retrieve a note record
      description: Retrieve a note record
      operationId: getNoteWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/NoteWS'
  /api/v1/crm/lead/find/id/{id}:
    get:
      tags:
        - Engagement & Sales
      summary: Retrieve a lead record
      description: Retrieve a lead record
      operationId: getLeadWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/LeadWS'
  /api/v1/crm/email/find/id/{id}:
    get:
      tags:
        - Engagement & Sales
      summary: Retrieve an email record
      description: Retrieve an email record
      operationId: getEmailWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/EmailWS'
  /api/v1/crm/contact/list/customer/id/{id}:
    get:
      tags:
        - Engagement & Sales
      summary: Retrieve contacts related to a customer
      description: Retrieve contacts related to a customer
      operationId: getContactForCustomerWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ContactTOWS'
  /api/v1/crm/contact/find/id/{id}:
    get:
      tags:
        - Engagement & Sales
      summary: Retrieve a contact record
      description: Retrieve a contact record
      operationId: getContactWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ContactWS'
  /api/v1/crm/case/list/customer/id/{id}:
    get:
      tags:
        - Engagement & Sales
      summary: Retrieve cases related to a customer
      description: Retrieve cases related to a customer
      operationId: getCasesForCustomerWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/CaseTOWS'
  /api/v1/crm/case/find/id/{id}:
    get:
      tags:
        - Engagement & Sales
      summary: Retrieve a case record
      description: Retrieve a case record
      operationId: getCaseWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/CaseWS'
  /api/v1/crm/campaign/find/id/{id}:
    get:
      tags:
        - Engagement & Sales
      summary: Retrieve a campaign record
      description: Retrieve a campaign record
      operationId: getCampaignWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/CampaignWS'
  /api/v1/crm/call/find/id/{id}:
    get:
      tags:
        - Engagement & Sales
      summary: Retrieve a call record
      description: Retrieve a call record
      operationId: getCallWithId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/CallWS'
  /api/v1/order/watchlist/delete/id/{id}:
    delete:
      tags:
        - Trade & Invest
      summary: Delete a watch list
      description: Delete a watch list
      operationId: deleteWatchListById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/whatsapp/delete/id/{id}:
    delete:
      tags:
        - Engagement & Sales
      summary: Delete a WhatsApp record
      description: Delete an WhatsApp record
      operationId: deleteWhatsAppById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/task/delete/id/{id}:
    delete:
      tags:
        - Engagement & Sales
      summary: Delete a task record
      description: Delete a task record
      operationId: deleteTaskById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/target-list/delete/id/{id}:
    delete:
      tags:
        - Engagement & Sales
      summary: Delete a target list record
      description: Delete a target list record
      operationId: deleteTargetListById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/sms/delete/id/{id}:
    delete:
      tags:
        - Engagement & Sales
      summary: Delete an sms record
      description: Delete an sms record
      operationId: deleteSmsById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/project/delete/id/{id}:
    delete:
      tags:
        - Engagement & Sales
      summary: Delete a project record
      description: Delete a project record
      operationId: deleteProjectById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/project-task/delete/id/{id}:
    delete:
      tags:
        - Engagement & Sales
      summary: Delete a project task record
      description: Delete a project task record
      operationId: deleteProjectTaskById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/opportunity/delete/id/{id}:
    delete:
      tags:
        - Engagement & Sales
      summary: Delete an opportunity record
      description: Delete an opportunity record
      operationId: deleteOpportunityById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/note/delete/id/{id}:
    delete:
      tags:
        - Engagement & Sales
      summary: Delete a note record
      description: Delete a note record
      operationId: deleteNoteById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/lead/delete/id/{id}:
    delete:
      tags:
        - Engagement & Sales
      summary: Delete a lead record
      description: Delete a lead record
      operationId: deleteLeadById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/email/delete/id/{id}:
    delete:
      tags:
        - Engagement & Sales
      summary: Delete an email record
      description: Delete an email record
      operationId: deleteEmailById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/contact/delete/id/{id}:
    delete:
      tags:
        - Engagement & Sales
      summary: Delete a contact record
      description: Delete a contact record
      operationId: deleteContactById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/case/delete/id/{id}:
    delete:
      tags:
        - Engagement & Sales
      summary: Delete a case record
      description: Delete a case record
      operationId: deleteCaseById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/campaign/delete/id/{id}:
    delete:
      tags:
        - Engagement & Sales
      summary: Delete a campaign record
      description: Delete a campaign record
      operationId: deleteCampaignById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
  /api/v1/crm/call/delete/id/{id}:
    delete:
      tags:
        - Engagement & Sales
      summary: Delete a call record
      description: Delete a call record
      operationId: deleteCallById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 0
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RestResponse'
components:
  schemas:
    MCustomer:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        groupId:
          type: integer
          description: The client group ID
          format: int64
          example: 10000
        agentId:
          type: integer
          description: The agent ID
          format: int64
          example: 10000
        fundManagerId:
          type: integer
          description: The fund manager ID
          format: int64
          example: 10000
        partnerRiskLimitId:
          type: integer
          description: The risk limit ID
          format: int64
          example: 10000
        ecrmId:
          type: integer
          description: The CRM record ID. This should be the same value as the client ID
          format: int64
          example: 10000
        referalCode:
          type: string
          description: The referral code
          example: JOHN2345
        referrer:
          type: string
          description: The referrer's name
          example: John Smith
        referrerInfo:
          type: string
          description: The referrers details
          example: John Smith Details
        clearingHouseNo:
          type: string
          description: 'The CSD house #'
          example: CHN2012222
        prefix:
          type: string
          description: The prefix
          example: Senator
        salutation:
          type: string
          description: 'The salutation '
          example: Chief
        suffix:
          type: string
          description: The suffix
          example: Jnr
        cashAcct:
          type: string
          description: 'The cash account #'
          example: '0000001'
        cashAcctBalance:
          type: string
          description: The cash account balance
          example: '10000.5'
        portfolioTypeName:
          type: string
          description: The portfolio type code
          example: '0000001'
        employerName:
          type: string
          description: The name of the employer
          example: MTN Plc
        employerAddress:
          type: string
          description: The address of the employer
          example: 1 High Street, Ikoyi, Lagos
        title:
          type: string
          description: The title
          example: Mr.
        firstName:
          type: string
          description: The first name
          example: John
        middleName:
          type: string
          description: The middle name
          example: Adam
        lastName:
          type: string
          description: The last name
          example: Smith
        cellPhone:
          type: string
          description: The cell phone number
          example: '+234700000000'
        homePhone:
          type: string
          description: The home phone number
          example: '+234700000000'
        otherPhone:
          type: string
          description: The other phone number
          example: '+234700000000'
        officePhone:
          type: string
          description: The office phone number
          example: '+234700000000'
        fax:
          type: string
          description: The fax number
          example: '+234700000000'
        emailAddress1:
          type: string
          description: The first email address
          example: john.smith@abz.com
        emailAddress2:
          type: string
          description: The second email address
          example: john.smith@abz.com
        birthDate:
          type: string
          description: The birth date
          format: date-time
        nationality:
          type: string
          description: The nationality
          example: British
        incCountry:
          type: string
          description: The country where the company was incorporated for corporate accounts
          example: United Kingdom
        sex:
          type: string
          description: The sex
          example: Male
        motherMaidenName:
          type: string
          description: The mothers maiden name
          example: Adam
        bvnCode:
          type: string
          description: The BVN code
          example: '0000000000'
        ninCode:
          type: string
          description: The national identification number
          example: '0000000000'
        nationalID:
          type: string
          description: The alternate national identification number
          example: '00000000000'
        identifier:
          type: string
          description: 'A unique client identifier e.g Drivers License #'
          example: '00000000000'
        identifierType:
          type: string
          description: The type of identifier
          example: DRIVERS_LICENSE
        identifierExpDate:
          type: string
          description: The ID expiration date
          format: date-time
        utilityBillExpDate:
          type: string
          description: The utility bill expiration date
          format: date-time
        primaryAddress1:
          type: string
          description: The primary address line 1
          example: 123 Hillcrest Road
        primaryAddress2:
          type: string
          description: The primary address line 2
          example: Off Richmond Avenue
        primaryCity:
          type: string
          description: The primary city
          example: Ikoyi
        primaryPostCode:
          type: string
          description: The primary post code
          example: '00435'
        primaryState:
          type: string
          description: The primary state
          example: Lagos
        primaryCountry:
          type: string
          description: The primary country
          example: NG
        secondaryAddress1:
          type: string
          description: The secondary address line 1
          example: 123 Hillcrest Road
        secondaryAddress2:
          type: string
          description: The secondary address line 2
          example: Off Richmond Avenue
        secondaryCity:
          type: string
          description: The secondary city
          example: Ikoyi
        secondaryPostCode:
          type: string
          description: The secondary state
          example: Lagos
        secondaryState:
          type: string
          description: The secondary state
          example: Lagos
        secondaryCountry:
          type: string
          description: The secondary city
          example: NG
        title_2:
          type: string
          description: The account title for joint accounts
          example: Mr.
        firstName_2:
          type: string
          description: The firstname for joint accounts
          example: Elizabeth.
        middleName_2:
          type: string
          description: The middle name  for joint accounts
          example: Ngozi
        lastName_2:
          type: string
          description: The last name for joint accounts
          example: Smith
        cellPhone_2:
          type: string
          description: The cell phone for joint accounts
          example: '+445600099000'
        fax_2:
          type: string
          description: The fax for joint accounts
          example: '+445600099000'
        emailAddress1_2:
          type: string
          description: The email address for joint accounts
          example: eliz.ngozi@gmail.com
        birthDate_2:
          type: string
          description: The date of birth for joint accounts
          format: date-time
        nationality_2:
          type: string
          description: The nationality for joint accounts
          example: British
        sex_2:
          type: string
          description: The sex for joint accounts
          example: FEMALE
        motherMaidenName_2:
          type: string
          description: The mothers maiden name for joint accounts
          example: Nwamaka
        identifier_2:
          type: string
          description: The identifier for joint accounts
          example: '930333333'
        identifierType_2:
          type: string
          description: The identifier type for joint accounts
          example: PASSPORT
        profession_2:
          type: string
          description: The profession for joint accounts
          example: Doctor
        primaryAddress1_2:
          type: string
          description: The primary address line 1 for joint accounts
          example: Same as primary
        primaryCity_2:
          type: string
          description: The primary city for joint accounts
          example: Same as primary
        primaryPostCode_2:
          type: string
          description: The primary post code for joint accounts
          example: Same as primary
        primaryState_2:
          type: string
          description: The primary state for joint accounts
          example: Same as primary
        primaryCountry_2:
          type: string
          description: The primary country for joint accounts
          example: Same as primary
        secondaryAddress1_2:
          type: string
          description: The secondary address line 1 for joint accounts
          example: Same as primary
        secondaryCity_2:
          type: string
          description: The secondary city for joint accounts
          example: Same as primary
        secondaryPostCode_2:
          type: string
          description: The secondary post code for joint accounts
          example: Same as primary
        secondaryState_2:
          type: string
          description: The secondary state for joint accounts
          example: Same as primary
        secondaryCountry_2:
          type: string
          description: The secondary country for joint accounts
          example: Same as primary
        localGovt:
          type: string
          description: The local government
          example: Same as primary
        valuationCurrency:
          type: string
          description: The default valuation currency
          example: USD
        religion:
          type: string
          description: The customer's religion
          example: Christian
        howDidYouHearAboutUs:
          type: string
          description: The channel through which the client was acquired
          example: Social Media
        postNominal:
          type: string
          description: The post nominal flag
          example: 'true'
          deprecated: true
        ethnicity:
          type: string
          description: The customers ethnicity
          example: Ibo
        maritalStatus:
          type: string
          description: The marital status (MARRIED, SINGLE, DIVORCED)
          example: MARRIED
        portalUserName:
          type: string
          description: Unique username for accessing the portal and mobile platforms
          example: john.smith
        portalPassword:
          type: string
          description: A portal password that meets the password policy configured for the tenant
          example: xxxxxxx
        portalPasswordToken:
          type: string
          description: A 6 digit pin for password reset
          example: '000000'
          deprecated: true
        allowDebitBalance:
          type: boolean
          description: Indicates if debit balances are allowed
          example: true
          deprecated: true
        grantPortalAccess:
          type: boolean
          description: A flag that indicates if access to the portal and mobile platform is approved
          example: true
        lastLoginIPAddress:
          type: string
          description: Tracks the last IP address used to access the portal
          example: 196.1.1.1
        lastLoginDttm:
          type: string
          description: Tracks the last login date and time
          format: date-time
        secretQuestion:
          type: string
          description: Secret question used for account recovery
          example: What is your favourite color
        secretAnswer:
          type: string
          description: Secret answer used for account recovery
          example: Blue
        forcePasswordReset:
          type: boolean
          description: Indicates if a mandatory password reset is required on next login
          example: false
        passwordResetToken:
          type: string
          description: A token generated during the password reset process
          example: '112233'
          deprecated: true
        alertsEmail:
          type: string
          description: Email address to be used to notifications if different from the main email address
          example: john.smith@xxx.com
        profession:
          type: string
          description: The profession
          example: Engineer
        salesRepName:
          type: string
          description: The system code for the relationship manager
          example: '100000'
        customerGroupName:
          type: string
          description: The system code for the customer group
          example: '100000'
        customerGroupLabel:
          type: string
          description: The label for the customer group
          example: Platinum Clients
        businessOfficeName:
          type: string
          description: The system code for the business office
          example: '100000'
        customerType:
          type: string
          description: The account type (REGULAR | PROP)
          example: REGULAR
        partnerType:
          type: string
          description: The partner type (INDV | CORP)
          example: INDV
        finInstID:
          type: string
          description: The financial institution ID
          example: '100000'
        nexofKin:
          type: string
          description: The name of the next of kin
          example: Mary Boldstage
        nextofKinAddress:
          type: string
          description: The address of the next of kin
          example: 123 Down Blvd, Ikoyi, Lagos
        nexofKinEmailAddress:
          type: string
          description: The email of the next of kin
          example: mary.blg@yahoo.com
        nextofKinPhone:
          type: string
          description: 'The phone # of the next of kin'
          example: '+1345000999'
        nextofKinRelationship:
          type: string
          description: The type of relationship with the next of kin
          example: Mother
        allowNomineeAccount:
          type: boolean
          description: Indicates if this account can be managed as a nominee portfolio
          example: false
        termsAndCondAccepted:
          type: boolean
          description: Indicates if the terms and conditions have been accepted
          example: true
        setttlementBankName:
          type: string
          description: The name of the settlement bank
          example: Access Bank Plc
        setttlementBankBranch:
          type: string
          description: The branch of the settlement bank
          example: Head Office
        setttlementBankStreet:
          type: string
          description: The name of the settlement bank street
          example: 1 Legali Ayorinde Street
        setttlementBankCity:
          type: string
          description: The name of the settlement bank city
          example: Victoria Island
        setttlementBankPostState:
          type: string
          description: The name of the settlement bank state
          example: Lagos
        setttlementBankPostCode:
          type: string
          description: The name of the settlement bank post code
          example: '44444'
        setttlementBankPostCountry:
          type: string
          description: The name of the settlement bank country
          example: NG
        setttlementBankAccountName:
          type: string
          description: The name of the settlement bank account name
          example: John Smith
        setttlementBankAccountNumber:
          type: string
          description: The name of the settlement bank account number
          example: '1000000000'
        setttlementBankAccountSCode:
          type: string
          description: The name of the settlement bank sort code
          example: '1100998'
        setttlementBankOpenDate:
          type: string
          description: The date the account was opened
          format: date-time
        setttlementBankName_2:
          type: string
          description: The name of the alternative settlement bank)
          example: Access Bank Plc
        setttlementBankBranch_2:
          type: string
          description: The branch of the alternative settlement bank
          example: Head Office
        setttlementBankStreet_2:
          type: string
          description: The name of the alternative settlement bank street
          example: 1 Legali Ayorinde Street
        setttlementBankCity_2:
          type: string
          description: The name of the alternative settlement bank city
          example: Victoria Island
        setttlementBankPostState_2:
          type: string
          description: The name of the alternative settlement bank state
          example: Lagos
        setttlementBankPostCode_2:
          type: string
          description: The name of the alternative settlement bank post code
          example: '44444'
        setttlementBankPostCountry_2:
          type: string
          description: The name of the alternative settlement bank country
          example: NG
        setttlementBankAccountName_2:
          type: string
          description: The name of the alternative settlement bank account name
          example: John Smith
        setttlementBankAccountNumber_2:
          type: string
          description: The name of the alternative settlement bank account number
          example: '1000000000'
        setttlementBankAccountSCode_2:
          type: string
          description: The name of the alternative settlement bank sort code
          example: '1100998'
        setttlementBankOpenDate_2:
          type: string
          description: The date the alternative account was opened
          format: date-time
        channel:
          type: string
          description: The channel through which the account was opened
          example: MOBILE
        lastTransactionDate:
          type: string
          description: The customers last transaction date
          format: date-time
        lastTransactionDescr:
          type: string
          description: The description of the last transaction
          example: BUY 200 ACCESS @ LIMIT 10
        portfolios:
          type: array
          description: A list of the portfolio codes
          items:
            type: string
            description: A list of the portfolio codes
        picture:
          type: string
          description: 'Base 64 encoded string data for the picture '
        pictureFileName:
          type: string
          description: The picture file name
          example: passport.png
        pictureMimeType:
          type: string
          description: The picture file mime type
          example: image/png
        signature:
          type: string
          description: Base 64 encoded string data for the signature
        signatureFileName:
          type: string
          description: The signature file name
          example: signature.png
        signatureMimeType:
          type: string
          description: The signature file mime type
          example: image/png
        identification:
          type: string
          description: Base 64 encoded string data for the means of identification
        identificationFileName:
          type: string
          description: The ID file name
          example: license.png
        identificationMimeType:
          type: string
          description: The ID file mime type
          example: image/png
        utilityBill:
          type: string
          description: Base 64 encoded string data for the utility bill
        utilityBillFileName:
          type: string
          description: The utility bill file name
          example: utility.png
        utilityBillMimeType:
          type: string
          description: The utility bill file mime type
          example: image/png
        estimatedAnnualIncome:
          type: number
          description: Estimated annual income
        estimatedNetWorth:
          type: number
          description: Estimated annual income
        enrollInContribScheme:
          type: boolean
          description: Enrolled in the automated cash sweep & invest product
          example: false
        contribAmount:
          type: number
          description: Amount to sweep and invest in every period
          example: 200000
        sourceOfWealthNotes:
          type: string
          description: Notes on the source of wealth
          example: Inherited an estate
        sourceOfWealth:
          type: string
          description: The source of wealth
          example: Professional Investor
        invstKnowledge:
          type: string
          description: How much experience does the investor have
          example: Expert
        riskTolerance:
          type: string
          description: The tolerance for risk
          example: High
        overallInvstObj:
          type: string
          description: The primary investment objective
          example: Capital Preservation
        moneyLaunderingRisk:
          type: boolean
          description: Indicates if customer is a risk for money laundering
          example: false
        politicallyExposed:
          type: boolean
          description: Indicates if customer is politically exposed (PEP)
          example: false
        criminalConviction:
          type: boolean
          description: Indicates if customer has a prior criminal conviction
          example: false
        stateOfOrigin:
          type: string
          description: The state of origin
          example: Lagos
        salesRepId:
          type: integer
          description: The system ID for the relationship manager
          format: int64
          example: 10000000
        salesRepLabel:
          type: string
          description: The label of the relationship manager
          example: Dawn Function
        salesRepEmail:
          type: string
          description: The email of the relationship manager
          example: dawn@mywealth.io
        salesRepCellPhone:
          type: string
          description: The cell phone of the relationship manager
          example: '+13450000000'
        salesRepOfficePhone:
          type: string
          description: The office phone of the relationship manager
          example: '+13450000000'
        refName1:
          type: string
          description: A unique client ID number in on another integrated platform
          example: CLNT001
        refName2:
          type: string
          description: A unique client ID number in on another integrated platform
          example: CLNT002
        refName3:
          type: string
          description: A unique client ID number in on another integrated platform
          example: CLNT003
        refName4:
          type: string
          description: A unique client ID number in on another integrated platform
          example: CLNT004
        refName5:
          type: string
          description: A unique client ID number in on another integrated platform
          example: CLNT005
        residentStatus:
          type: string
          description: A residence status of the client (RESIDENT|NON_RESIDENT)
          example: RESIDENT
        countryOfDomicile:
          type: string
          description: The country where the client is domiciled
          example: UK
        ficaCompliant:
          type: string
          description: Indicates if the account is FICA compliant
          example: 'true'
        getdWTExemptCd:
          type: string
          description: The DWT tax exception code
          example: DWT_8993
        getiWTExemptCd:
          type: string
          description: The IWT tax exception code
          example: DWT_8993
        getdWTOverridePerc:
          type: number
          description: The DWT tax over ride percent
          format: double
          example: 20
        getiWTOverridePerc:
          type: number
          description: The IWT tax over ride code
          format: double
          example: 20
        taxIdNumber:
          type: string
          description: The clients tax ID number
          example: '2303333'
        accountOpened:
          type: string
          description: The date the account was opened
          format: date-time
        status:
          type: string
          description: The status of the account
          example: ACTIVE
        kycStatus:
          type: string
          description: The KYC status of the account
          example: APPROVED
        workflowStatus:
          type: string
          description: The workflow status of the account
          example: APPROVED
        signatory1:
          type: string
          description: Base 64 encoded string data for the first signatory
        signatory1FileName:
          type: string
          description: The first signatory file name
          example: sig1.png
        signatory1MimeType:
          type: string
          description: The first signatory file mime type
          example: image/png
        signatory1Label:
          type: string
          description: The first signatory label
          example: Director 1
        signatory2:
          type: string
          description: Base 64 encoded string data for the second signatory
        signatory2FileName:
          type: string
          description: The second signatory file name
          example: sig2.png
        signatory2MimeType:
          type: string
          description: The second signatory file mime type
          example: image/png
        signatory2Label:
          type: string
          description: The second signatory label
          example: Director 2
        signatory3:
          type: string
          description: Base 64 encoded string data for the third signatory
        signatory3FileName:
          type: string
          description: The third signatory file name
          example: sig3.png
        signatory3MimeType:
          type: string
          description: The third signatory file mime type
          example: image/png
        signatory3Label:
          type: string
          description: The third signatory label
          example: Director 3
        signatory4:
          type: string
          description: Base 64 encoded string data for the first fourth
        signatory4FileName:
          type: string
          description: The fourth signatory file name
          example: sig4.png
        signatory4MimeType:
          type: string
          description: The fourth signatory file mime type
          example: image/png
        signatory4Label:
          type: string
          description: The fourth signatory label
          example: Director 4
        signatory5:
          type: string
          description: Base 64 encoded string data for the fifth signatory
        signatory5FileName:
          type: string
          description: The fifth signatory file name
          example: sig5.png
        signatory5MimeType:
          type: string
          description: The fifth signatory file mime type
          example: image/png
        signatory5Label:
          type: string
          description: The fifth signatory label
          example: Director 5
    RestResponse:
      type: object
      properties:
        msgCode:
          type: string
          description: The message code
          example: SUCCESS
        msgArgs:
          type: array
          description: The message arguments
          items:
            type: string
            description: The message arguments
        success:
          type: boolean
          description: Indicates if the request was successful
          example: true
    MWatchList:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        customerId:
          type: integer
          description: The customer ID
          format: int64
          example: 100000
        defaultList:
          type: boolean
          description: Indicates if this is a default list
          example: true
        watchedSecurities:
          type: array
          description: The securities in the watch list
          items:
            $ref: '#/components/schemas/MWatchedSecurity'
    MWatchedSecurity:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        watchListId:
          type: integer
          description: The ID of the watch list
          format: int64
          example: 1000
        securityId:
          type: integer
          description: The ID of the security
          format: int64
          example: 1000
        securityName:
          type: string
          description: The symbol of the security
          example: ACCESS
        marketPrice:
          type: number
          description: The optional (simulated) WAC with which the position will be tracked
          example: 10
        gain:
          type: number
          description: The absolute gain/loss calculated by the system based on the simulated WAC
          example: 2
        percentGain:
          type: number
          description: The gain/loss percentage calculated by the system based on the simulated WAC
          example: 20
      description: The securities in the watch list
    MTradeOrder:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        instrumentType:
          type: string
          description: The type of instrument
          example: EQUITY
        orderBase:
          type: string
          description: The basis for computing value (QUANTITY | VALUE)
          example: QUANTITY
        fixMessage:
          type: string
          description: The last message from the execution venue for the order
          example: Order accepted
        systemGenerated:
          type: boolean
          description: Indicates if the order was system generated
          example: false
        exchange:
          type: string
          description: The ID for the market / execution venue
          example: NGX
        securityName:
          type: string
          description: The security ID of symbol
          example: ACCESS
        securityLabel:
          type: string
          description: The security description
          example: Access Bank Plc
        customerName:
          type: string
          description: The client code
          example: '0000000001'
        customerLabel:
          type: string
          description: The client label
          example: John Smith
        portfolioName:
          type: string
          description: The portfolio code
          example: '0000000001'
        portfolioLabel:
          type: string
          description: The portfolio label
          example: John Smith (NGX)
        orderType:
          type: string
          description: The order type (BUY | SELL)
          example: BUY
        priceType:
          type: string
          description: The price type (MARKET | LIMIT)
          example: LIMIT
        orderStartDate:
          type: string
          description: The date the order started executing
          format: date-time
        orderEndDate:
          type: string
          description: The date the order will expire
          format: date-time
        referenceOrderId:
          type: integer
          description: The ID of the related order for reference order types
          format: int64
          example: 100001
        settlementInstructions:
          type: string
          description: The settlement instructions
          example: Please transfer to settlement account
        commissionGroupName:
          type: string
          description: The system code for the commission group
          example: DEFAULT
        orderDate:
          type: string
          description: The date and time that the order was submitted
          format: date-time
        orderOrigin:
          type: string
          description: The channel through which the order was submitted
          example: WEB
        quantityRequested:
          type: number
          description: The requested quantity
          example: 1000
        businessOffice:
          type: string
          description: The code for the business office that the client belongs to
          example: '0000001'
        instrument:
          type: string
          description: The instrument code for the commission group
          example: DEFAULT
          deprecated: true
        orderCurrency:
          type: string
          description: The order currency. This has to match the instrument listing currency
          example: NGN
        limitPrice:
          type: number
          description: The limit price
          example: 10.55
        stopPrice:
          type: number
          description: The stop price
          example: 10
        orderTermName:
          type: string
          description: The order term validation rule code
          example: '000001'
        custodianName:
          type: string
          description: The custodian code
          example: '00001'
        agentName:
          type: string
          description: The agent code
          example: '00001'
        orderTermLabel:
          type: string
          description: The order term validation rule label
          example: Good For A Day
        quantityFilled:
          type: number
          description: The filled quantity
          example: 500
        quantityPending:
          type: number
          description: The pending quantity
          example: 500
        orderStatus:
          type: string
          description: The order status. This will always be EXECUTING for valid orders and will be changed based on messages from the execution venue or when manually modified
          example: EXECUTING
        fixOrderStatus:
          type: string
          description: The status from the execution venue
          example: PARTIALLY_FILLED
        statusDate:
          type: string
          description: The time the status information from the execution venue came in
          format: date-time
        locked:
          type: boolean
          description: Indicates if the order is locked and cannot be modified
          example: false
          deprecated: true
        orderTotal:
          type: number
          description: The estimated total value of the order (consideration, fees & commission)
          example: 12000.5
        orderValue:
          type: number
          description: The value of the order (consideration only)
          example: 10000
    MTBillTransaction:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        batchId:
          type: integer
          description: The system batch ID
          format: int64
          example: 1000
        dealerId:
          type: integer
          description: The system dealer ID
          format: int64
          example: 1000
        treasuryBillTypeId:
          type: integer
          description: The discounted instrument type ID
          format: int64
          example: 1000
        treasuryBillTypeName:
          type: string
          description: The discounted instrument type code
          example: FB_BILLS
        treasuryBillTypeLabel:
          type: string
          description: The discounted instrument type label
          example: Federal Government Treasury
        moneyMarketType:
          type: string
          description: The discounted instrument classification. See enum for values
          example: TBILL_364
        customerId:
          type: integer
          description: The system ID of the customer
          format: int64
          example: 1000
        customerName:
          type: string
          description: The customer code
          example: '000001'
        customerLabel:
          type: string
          description: The customer label
          example: John Smith
        portfolioId:
          type: integer
          description: The portfolio ID
          format: int64
          example: 100000
        portfolioName:
          type: string
          description: The portfolio code
          example: '000001'
        portfolioLabel:
          type: string
          description: The portfolio label
          example: John Smith
        cashAcctId:
          type: integer
          description: The cash account ID
          format: int64
          example: 100000
        cashAcctName:
          type: string
          description: The cash account code
          example: '0000001'
        cashAcctLabel:
          type: string
          description: The cash account label
          example: John Smith (Default)
        startDate:
          type: string
          description: The start date for the transaction
          format: date-time
        maturityDate:
          type: string
          description: The maturity date for the transaction
          format: date-time
        tenor:
          type: integer
          description: The tenor (days)
          format: int32
          example: 3000
        rediscountRequested:
          type: boolean
          description: Indicates if the instrument was re-discounted
          example: false
        currency:
          type: string
          description: The currency
          example: NGN
        faceValue:
          type: number
          description: The face value of the instrument
          example: 1000000000
        discountedValue:
          type: number
          description: The discounted value of the instrument
          example: 980000000
        discountRate:
          type: number
          description: The discount rate (percent)
          example: 10
        interestAmount:
          type: number
          description: The interest amount
          example: 2000000000
        yield:
          type: number
          description: The yield
          example: 12
        status:
          type: string
          description: The status
          example: RUNNING
        firmCommissionRateType:
          type: string
          description: The firm commission rate type
          example: DISCOUNTED_ANNUALIZED
        dealerCommissionRateType:
          type: string
          description: The dealer commission rate type
          example: DISCOUNTED_ANNUALIZED
        contractCommRate:
          type: number
          description: The contract commission rate
          example: 1
        dealerCommRate:
          type: number
          description: The dealer commission rate
          example: 0.5
    MAMTradeContractNote:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        contractNumber:
          type: string
          description: The contract note number
          example: '10000'
        waCost:
          type: number
          description: The average cost
          example: 100.45
        portfolioId:
          type: integer
          description: The portfolio ID
          format: int64
          example: 1000
        portfolioName:
          type: string
          description: The portfolio number
          example: '10000'
        cashAccountId:
          type: integer
          description: The cash account ID
          format: int64
          example: 1000
        cashAccountName:
          type: string
          description: The cash account number
          example: '10000'
        securityId:
          type: integer
          description: The security ID
          format: int64
          example: 1000
        securityName:
          type: string
          description: The security symbol
          example: ACCESS
        exchange:
          type: string
          description: The market ID
          example: NGX
        brokerId:
          type: integer
          description: The broker ID
          format: int64
          example: 1000
        brokerName:
          type: string
          description: The broker number
          example: BRK01
        orderType:
          type: string
          description: The order type. Valid values are BUY | SELL | CROSS_DEAL
          example: BUY
        status:
          type: string
          description: The contract status
          example: POSTED
        transactionDate:
          type: string
          description: The transaction date
          format: date-time
        settlementDate:
          type: string
          description: The settlement date
          format: date-time
        quantity:
          type: number
          description: The contract quantity
          example: 2000
        contractCurrency:
          type: string
          description: The contract currency
          example: NGN
        contractPrice:
          type: number
          description: The contract price
          example: 122.45
        contractTotal:
          type: number
          description: The contract total
          example: 200000.45
        calculatedContractAmount:
          type: number
          description: The calculated contract amount using bond data in the system
          example: 200000.45
        contractDirtyPrice:
          type: number
          description: The dirty price for bond contracts
          example: 101.45
        bondCleanPrice:
          type: number
          description: The clean price for bond contracts
          example: 100
        bondFaceValue:
          type: number
          description: The dirty price for bond contracts
          example: 1000
    NoteWS:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the record is active
          example: true
        base64Attachment:
          type: string
          description: Base64 encoded value of the file
        batchCode:
          type: string
          description: The batch code
          example: BATCH_001
        category:
          type: string
          description: The file category
          example: KYC
        description:
          type: string
          description: Comments/notes on the file
          example: Details on the file
        fileMimeType:
          type: string
          description: The mime type of the file
          example: application/pdf
        fileName:
          type: string
          description: The name of the file
          example: letter.pdf
        fileSize:
          type: integer
          description: The size of the file
          format: int64
          example: 100000
        id:
          type: integer
          description: The system ID of the file
          format: int64
          example: 100000
        label:
          type: string
          description: The system label of the file
          example: KYC_001/BATCH_001
        name:
          type: string
          description: The system code of the file
          example: KYC_001/BATCH_001
        relatedToId:
          type: integer
          description: The ID of the system record that the file is related to
          format: int64
          example: 1000
        relatedTo:
          type: string
          description: The type of system record that the file is related to
          example: CUSTOMER
          enum:
            - CONTACT
            - CASE
            - OPPORTUNITY
            - PROJECT
            - PROJECT_TASK
            - CAMPAIGN
            - TEMPLATE
            - LEAD
            - CUSTOMER
            - EMPLOYEE
        subCategory:
          type: string
          description: The file sub category
          example: PROOF_OF_ADDRESS
        text:
          type: string
          description: Additional text on the file
          example: Additional text
        type:
          type: string
          description: The type of file
          example: COMPLIANCE
        workflowNotes:
          type: string
          description: Notes from the workflow engine related to the record
          example: Additional text
      description: Binary attachments related to the message
    WhatsAppWS:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the record is active
          example: true
        assignedTo:
          type: integer
          description: The ID of the employee that the communication record is assigned to
          format: int64
          example: 1000
        attachmentsWS:
          type: array
          description: Binary attachments related to the message
          items:
            $ref: '#/components/schemas/NoteWS'
        direction:
          type: string
          description: Indicates the direction of the message
          example: INBOUND
          enum:
            - INBOUND
            - OUTBOUND
        body:
          type: string
          description: The body of the message
          example: 'Trade # 120 has been executed'
        campaign:
          type: integer
          description: The ID of the campaign record if it was sent as part of a campaign
          format: int64
          example: 1000
        description:
          type: string
          description: Additional notes on the message
          example: 'Trade # 120 has been executed'
        endDttm:
          type: string
          description: Indicates when the message was delivered
          format: date-time
        from:
          type: string
          description: The ID from which the message was sent
          example: notifications@mywealth.io
        id:
          type: integer
          description: The system ID of the record
          format: int64
          example: 1000
        label:
          type: string
          description: The system label of the record
          example: '0000001'
        name:
          type: string
          description: 'The system record # of the record'
          example: '1000'
        relatedToId:
          type: integer
          description: The ID of the system record that the file is related to
          format: int64
          example: 1000
        relatedTo:
          type: string
          description: The type of system record that the file is related to
          example: CUSTOMER
          enum:
            - CONTACT
            - CASE
            - OPPORTUNITY
            - PROJECT
            - PROJECT_TASK
            - CAMPAIGN
            - TEMPLATE
            - LEAD
            - CUSTOMER
            - EMPLOYEE
        startDttm:
          type: string
          description: Indicates when the message was submitted to the gateway
          format: date-time
        status:
          type: string
          description: The status of the message
          example: SENT
          enum:
            - IN_PROGRESS
            - COMPLETE
            - DRAFT
            - PLANNED
            - ARCHIVED
            - SENT
            - NOT_DELIVERED
            - CANCELED
        subject:
          type: string
          description: The subject
          example: ORDER NOTIFICATION
        template:
          type: integer
          description: The ID of the template used
          format: int64
          example: 1000
        to:
          type: string
          description: The address of the recipient
          example: '+2340000000000'
        workflowNotes:
          type: string
          description: Notes from the workflow engine related to the record
          example: Additional text
    TaskWS:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the record is active
          example: true
        assignedTo:
          type: integer
          description: The ID of the employee that the record is assigned to
          format: int64
          example: 1000
        contact:
          type: integer
          description: The ID of the contact that the record is related to
          format: int64
          example: 1000
        description:
          type: string
          description: Additional notes on the record
          example: 'Trade # 120 has been executed'
        dueDate:
          type: string
          description: Indicates due date
          format: date-time
        id:
          type: integer
          description: The system ID of the record
          format: int64
          example: 1000
        label:
          type: string
          description: The system label of the record
          example: '0000001'
        name:
          type: string
          description: 'The system record # of the record'
          example: '1000'
        owner:
          type: integer
          description: The ID of the employee that the task is assigned to
          format: int64
          example: 1000
        priority:
          type: string
          description: The priority of the task
          example: HIGH
          enum:
            - LOW
            - MEDIUM
            - HIGH
        relatedToId:
          type: integer
          description: The ID of the system record that the record is related to
          format: int64
          example: 1000
        relatedTo:
          type: string
          description: The type of system record that the record is related to
          example: CUSTOMER
          enum:
            - CONTACT
            - CASE
            - OPPORTUNITY
            - PROJECT
            - PROJECT_TASK
            - CAMPAIGN
            - TEMPLATE
            - LEAD
            - CUSTOMER
            - EMPLOYEE
        startDate:
          type: string
          description: Indicates when the was started
          format: date-time
        status:
          type: string
          description: The status of the task
          example: COMPLETED
          enum:
            - NOT_STARTED
            - IN_PROGRESS
            - WAITING_FOR_INPUT
            - COMPLETED
        subject:
          type: string
          description: The subject
          example: Create new portfolio
        workflowNotes:
          type: string
          description: Notes from the workflow engine related to the record
          example: Additional text
    TargetListWS:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the record is active
          example: true
        assignedTo:
          type: integer
          description: The ID of the employee that the record is assigned to
          format: int64
          example: 1000
        description:
          type: string
          description: Additional notes on the record
          example: 'Trade # 120 has been executed'
        id:
          type: integer
          description: The system ID of the record
          format: int64
          example: 1000
        label:
          type: string
          description: The label of the record
          example: All Female Leads & Contacts
        name:
          type: string
          description: 'The system record # of the record'
          example: '1000'
        type:
          type: string
          description: The type of the target list
          example: DO_NOT_EMAIL
          enum:
            - ACTIVE
            - DO_NOT_CALL
            - DO_NOT_EMAIL
            - DO_NOT_SMS
            - DO_NOT_CONTACT
        workflowNotes:
          type: string
          description: Notes from the workflow engine related to the record
          example: Additional text
    SmsWS:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the record is active
          example: true
        assignedTo:
          type: integer
          description: The ID of the employee that the communication record is assigned to
          format: int64
          example: 1000
        attachmentsWS:
          type: array
          description: Binary attachments related to the message
          items:
            $ref: '#/components/schemas/NoteWS'
        direction:
          type: string
          description: Indicates the direction of the message
          example: INBOUND
          enum:
            - INBOUND
            - OUTBOUND
        body:
          type: string
          description: The body of the message
          example: 'Trade # 120 has been executed'
        campaign:
          type: integer
          description: The ID of the campaign record if it was sent as part of a campaign
          format: int64
          example: 1000
        description:
          type: string
          description: Additional notes on the message
          example: 'Trade # 120 has been executed'
        endDttm:
          type: string
          description: Indicates when the message was delivered
          format: date-time
        from:
          type: string
          description: The ID from which the message was sent
          example: '+123303030303'
        id:
          type: integer
          description: The system ID of the record
          format: int64
          example: 1000
        label:
          type: string
          description: The system label of the record
          example: '0000001'
        name:
          type: string
          description: 'The system record # of the record'
          example: '1000'
        relatedToId:
          type: integer
          description: The ID of the system record that the file is related to
          format: int64
          example: 1000
        relatedTo:
          type: string
          description: The type of system record that the file is related to
          example: CUSTOMER
          enum:
            - CONTACT
            - CASE
            - OPPORTUNITY
            - PROJECT
            - PROJECT_TASK
            - CAMPAIGN
            - TEMPLATE
            - LEAD
            - CUSTOMER
            - EMPLOYEE
        startDttm:
          type: string
          description: Indicates when the message was submitted to the gateway
          format: date-time
        status:
          type: string
          description: The status of the message
          example: SENT
          enum:
            - IN_PROGRESS
            - COMPLETE
            - DRAFT
            - PLANNED
            - ARCHIVED
            - SENT
            - NOT_DELIVERED
            - CANCELED
        subject:
          type: string
          description: The subject
          example: ORDER NOTIFICATION
        template:
          type: integer
          description: The ID of the template used
          format: int64
          example: 1000
        to:
          type: string
          description: The address of the recipient
          example: '+2340000000000'
        workflowNotes:
          type: string
          description: Notes from the workflow engine related to the record
          example: Additional text
    ProjectWS:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the record is active
          example: true
        actualHours:
          type: number
          description: Actual hours spent on the project
          format: double
          example: 2000
        assignedTo:
          type: integer
          description: The ID of the employee that the record is assigned to
          format: int64
          example: 1000
        description:
          type: string
          description: Additional notes on the record
          example: Investment Banking Details
        estimatedHours:
          type: number
          description: Estimated hours for the project
          format: double
          example: 3000
        id:
          type: integer
          description: The system ID of the record
          format: int64
          example: 1000
        label:
          type: string
          description: The system label of the record
          example: '0000001'
        name:
          type: string
          description: 'The system record # of the record'
          example: '1000'
        relatedToId:
          type: integer
          description: The ID of the system record that the record is related to
          format: int64
          example: 1000
        relatedTo:
          type: string
          description: The type of system record that the record is related to
          example: CUSTOMER
          enum:
            - CONTACT
            - CASE
            - OPPORTUNITY
            - PROJECT
            - PROJECT_TASK
            - CAMPAIGN
            - TEMPLATE
            - LEAD
            - CUSTOMER
            - EMPLOYEE
        status:
          type: string
          description: The status of the record
          example: IN_PROGRESS
          enum:
            - NOT_STARTED
            - IN_PROGRESS
            - WAITING_FOR_INPUT
            - COMPLETED
        workflowNotes:
          type: string
          description: Notes from the workflow engine related to the record
          example: Additional text
    ProjectTaskWS:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the record is active
          example: true
        actualHours:
          type: number
          description: Actual hours spent on the task
          format: double
          example: 2000
        assignedTo:
          type: integer
          description: The ID of the employee that the task is assigned to
          format: int64
          example: 1000
        contact:
          type: integer
          description: The ID of the contact that the record is related to
          format: int64
          example: 1000
        dependsOn:
          type: integer
          description: The ID of the task that the record depends on
          format: int64
          example: 1001
        description:
          type: string
          description: Additional notes on the record
          example: Generate term sheet
        dueDate:
          type: string
          description: Indicates due date
          format: date-time
        estimatedHours:
          type: number
          description: Estimated hours for the task
          format: double
          example: 3000
        id:
          type: integer
          description: The system ID of the record
          format: int64
          example: 1000
        label:
          type: string
          description: The system label of the record
          example: '0000001'
        mileStone:
          type: boolean
          description: Indicates if this is a milestone
          example: true
        name:
          type: string
          description: 'The system record # of the record'
          example: '1000'
        owner:
          type: integer
          description: The ID of the employee that owns the task
          format: int64
          example: 1000
        priority:
          type: string
          description: The priority of the task
          example: HIGH
          enum:
            - LOW
            - MEDIUM
            - HIGH
        progress:
          type: integer
          description: The progress in % terms
          format: int32
          example: 80
        project:
          type: integer
          description: The ID of the project that the task is related to
          format: int64
          example: 1000
        relatedToId:
          type: integer
          description: The ID of the system record that the record is related to
          format: int64
          example: 1000
        relatedTo:
          type: string
          description: The type of system record that the record is related to
          example: CUSTOMER
          enum:
            - CONTACT
            - CASE
            - OPPORTUNITY
            - PROJECT
            - PROJECT_TASK
            - CAMPAIGN
            - TEMPLATE
            - LEAD
            - CUSTOMER
            - EMPLOYEE
        startDate:
          type: string
          description: Indicates when the was started
          format: date-time
        status:
          type: string
          writeOnly: true
          enum:
            - NOT_STARTED
            - IN_PROGRESS
            - WAITING_FOR_INPUT
            - COMPLETED
        subject:
          type: string
          description: The subject
          example: Build term sheet
        utilization:
          type: integer
          description: The resource utilization (%)
          format: int32
          example: 50
        workflowNotes:
          type: string
          description: Notes from the workflow engine related to the record
          example: Additional text
    OpportunityWS:
      type: object
      properties:
        account:
          type: integer
          description: The ID of the customer that the record is related to
          format: int64
          example: 1000
        assignedTo:
          type: integer
          description: The ID of the employee that the record is assigned to
          format: int64
          example: 1000
        campaign:
          type: integer
          description: The ID of the campaign record if it was generated from a campaign
          format: int64
          example: 1000
        active:
          type: boolean
          description: Indicates if the record is active
          example: true
        amount:
          type: number
          description: The value of the opportunity
          format: double
          example: 10000000
        closeDate:
          type: string
          description: The forecasted close date
          format: date-time
        currency:
          type: string
          description: The forecast currency
          example: NGN
        description:
          type: string
          description: Additional notes on the record
          example: 'Trade # 120 has been executed'
        id:
          type: integer
          description: The system ID of the record
          format: int64
          example: 1000
        label:
          type: string
          description: The label of the deal
          example: Open a trust account
        leadSource:
          type: string
          description: The source of the lead
          example: WEB
        name:
          type: string
          description: 'The system record # of the record'
          example: '1000'
        nextStep:
          type: string
          description: The next step in the deal
          example: CLOSE
        probability:
          type: number
          description: The probability of closing the deal.  % value assigned to the various sales stages (Status)
          format: double
          example: 90
        type:
          type: string
          description: The type deal
          example: Discretionary Portfolio Mgt.
        workflowNotes:
          type: string
          description: Notes from the workflow engine related to the record
          example: Additional text
        status:
          type: string
          description: The status of the deal
          example: NEGOTIATION_REVIEW
          enum:
            - PROSPECTING
            - QUALIFICATION
            - NEEDS_ANALYSIS
            - VALUE_PROPOSITION
            - ID_DECISION_MAKERS
            - PERCEPTION_ANALYSIS
            - PROPOSAL_PRICE_QUOTE
            - NEGOTIATION_REVIEW
            - CLOSED_WON
            - CLOSED_LOST
    LeadWS:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the record is active
          example: true
        annualIncome:
          type: number
          description: The annual income
          format: double
          example: 100000
        assignedTo:
          type: integer
          description: The ID of the employee that the record is assigned to
          format: int64
          example: 1000
        birthDate:
          type: string
          description: The birth date
          format: date-time
        campaign:
          type: integer
          description: The ID of the campaign record if it was generated from a campaign
          format: int64
          example: 1000
        convertedAccount:
          type: integer
          description: The ID of the account if the lead has been converted
          format: int64
          example: 1000
        convertedContact:
          type: integer
          description: The ID of the contact if the lead has been converted
          format: int64
          example: 1000
        department:
          type: string
          description: The department of the lead
          example: Engineering
        description:
          type: string
          description: Additional notes on the record
          example: 'Trade # 120 has been executed'
        doNotCall:
          type: boolean
          description: The do not call flag
          example: false
        doNotShare:
          type: boolean
          description: The do not share flag
          example: false
        emailAddress1:
          type: string
          description: The first email address
          example: john.smith@abz.com
        emailAddress2:
          type: string
          description: The second email address
          example: john.smith@abz.com
        emailAddressAutoBcc:
          type: string
          description: The auto bcc email address
          example: john.smith@abz.com
        emailOptOut:
          type: boolean
          description: The email opt out flag
          example: false
        emailVerified:
          type: boolean
          description: The verified email flag
          example: false
        ethnicity:
          type: string
          description: The ethnicity
          example: Ibo
        fax:
          type: string
          description: The fax number
          example: '+234700000000'
        firstName:
          type: string
          description: The first name
          example: John
        headOfHousehold:
          type: boolean
          description: The head of household  flag
          example: false
        homePhone:
          type: string
          description: The home phone number
          example: '+234700000000'
        id:
          type: integer
          description: The system ID of the record
          format: int64
          example: 1000
        identifier:
          type: string
          description: 'A unique lead identifier e.g Drivers License #'
          example: '00000000000'
        industry:
          type: string
          description: The industry
          example: Construction
        label:
          type: string
          description: The label of the lead
          example: Steve Jobs
        lastName:
          type: string
          description: The last name
          example: Jobs
        leadSource:
          type: string
          description: The lead source
          example: Conference
        leadType:
          type: string
          description: The lead type
          example: INDIVIDUAL
          enum:
            - INDIVIDUAL
            - ORGANIZATION
        maritalStatus:
          type: string
          description: The marital status (MARRIED, SINGLE, DIVORCED)
          example: MARRIED
        middleName:
          type: string
          description: The middle name
          example: Adam
        mobilePhone:
          type: string
          description: The cell phone number
          example: '+234700000000'
        name:
          type: string
          description: 'The system record # of the record'
          example: '1000'
        noOfDependents:
          type: integer
          description: The number of dependents
          format: int32
          example: 4
        officePhone:
          type: string
          description: The office phone number
          example: '+234700000000'
        organization:
          type: string
          description: The name of the organization that the lead belongs to
          example: RCG Construction
        otherPhone:
          type: string
          description: The alternative phone number
          example: '+234700000000'
        preferredContactMethod:
          type: string
          description: 'The preferred contact method '
          example: PHONE
        preferredContactTime:
          type: string
          description: 'The preferred contact time '
          example: 6-8 PM
        prefix:
          type: string
          description: The prefix
          example: Senator
        primaryCity:
          type: string
          description: The primary city
          example: Ikoyi
        primaryCountry:
          type: string
          description: The primary country
          example: NG
        primaryLatitude:
          type: number
          description: The primary latitude
          format: double
          example: 12.05
        primaryLongitude:
          type: number
          description: The primary longitude
          format: double
          example: 19.02
        primaryPostCode:
          type: string
          description: The primary post code
          example: '00435'
        primaryState:
          type: string
          description: The primary state
          example: Lagos
        primaryStreet:
          type: string
          description: The primary address line 1
          example: 123 Hillcrest Road
        primaryStreet1:
          type: string
          description: The primary address line 2
          example: Off Richmond Avenue
        secondaryCity:
          type: string
          description: The secondary city
          example: Ikoyi
        secondaryCountry:
          type: string
          description: The secondary country
          example: NG
        secondaryLatitude:
          type: number
          description: The secondary latitude
          format: double
          example: 12.05
        secondaryLongitude:
          type: number
          description: The secondary longitude
          format: double
          example: 19.02
        secondaryPostCode:
          type: string
          description: The secondary post code
          example: '00435'
        secondaryState:
          type: string
          description: The secondary state
          example: Lagos
        secondaryStreet:
          type: string
          description: The secondary address line 1
          example: 123 Hillcrest Road
        secondaryStreet1:
          type: string
          description: The secondary address line 2
          example: Off Richmond Avenue
        profession:
          type: string
          description: The profession
          example: Engineer
        salutation:
          type: string
          description: 'The salutation '
          example: Chief
        sex:
          type: string
          description: The sex
          example: MALE
        smsOptOut:
          type: boolean
          description: SMS opt out flag
          example: false
        status:
          type: string
          description: The status of the lead
          example: CONVERTED
          enum:
            - NEW
            - ASSIGNED
            - IN_PROCESS
            - CONVERTED
            - DEAD
        suffix:
          type: string
          description: The suffix
          example: Jnr
        title:
          type: string
          description: The title
          example: Mr.
        typeOfEmployment:
          type: string
          description: The type of employment
          example: CORPORATE
        webSite:
          type: string
          description: The website
          example: www.www.com
        workflowNotes:
          type: string
          description: Notes from the workflow engine related to the record
          example: Additional text
    EmailWS:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the record is active
          example: true
        assignedTo:
          type: integer
          description: The ID of the employee that the communication record is assigned to
          format: int64
          example: 1000
        attachmentsWS:
          type: array
          items:
            $ref: '#/components/schemas/NoteWS'
        direction:
          type: string
          description: Indicates the direction of the message
          example: INBOUND
          enum:
            - INBOUND
            - OUTBOUND
        cc:
          type: string
          description: The cc to address
          example: hello@email.com
        bcc:
          type: string
          description: The bcc to address
          example: hello@email.com
        body:
          type: string
          description: The body of the message
          example: 'Trade # 120 has been executed'
        campaign:
          type: integer
          description: The ID of the campaign record if it was sent as part of a campaign
          format: int64
          example: 1000
        description:
          type: string
          description: Additional notes on the message
          example: 'Trade # 120 has been executed'
        endDttm:
          type: string
          description: Indicates when the message was delivered
          format: date-time
        from:
          type: string
          description: The ID from which the message was sent
          example: '+123303030303'
        id:
          type: integer
          description: The system ID of the record
          format: int64
          example: 1000
        label:
          type: string
          description: The system label of the record
          example: '0000001'
        mimeType:
          type: string
          description: The mime type of the email message
          example: text/html
        replyTo:
          type: string
          description: The reply to address
          example: hello@email.com
        name:
          type: string
          description: 'The system record # of the record'
          example: '1000'
        relatedToId:
          type: integer
          description: The ID of the system record that the file is related to
          format: int64
          example: 1000
        relatedTo:
          type: string
          description: The type of system record that the file is related to
          example: CUSTOMER
          enum:
            - CONTACT
            - CASE
            - OPPORTUNITY
            - PROJECT
            - PROJECT_TASK
            - CAMPAIGN
            - TEMPLATE
            - LEAD
            - CUSTOMER
            - EMPLOYEE
        startDttm:
          type: string
          description: Indicates when the message was submitted to the gateway
          format: date-time
        status:
          type: string
          description: The status of the message
          example: SENT
          enum:
            - IN_PROGRESS
            - COMPLETE
            - DRAFT
            - PLANNED
            - ARCHIVED
            - SENT
            - NOT_DELIVERED
            - CANCELED
        subject:
          type: string
          description: The subject
          example: ORDER NOTIFICATION
        template:
          type: integer
          description: The ID of the template used
          format: int64
          example: 1000
        to:
          type: string
          description: The address of the recipient
          example: '+2340000000000'
        workflowNotes:
          type: string
          description: Notes from the workflow engine related to the record
          example: Additional text
    ContactWS:
      type: object
      properties:
        id:
          type: integer
          description: The system ID of the record
          format: int64
          example: 1000
        active:
          type: boolean
          description: Indicates if the record is active
          example: true
        annualIncome:
          type: number
          description: The annual income
          format: double
          example: 100000
        assignedTo:
          type: integer
          description: The ID of the employee that the record is assigned to
          format: int64
          example: 1000
        baseCurrency:
          type: integer
          description: The currency
          format: int64
        birthDate:
          type: string
          description: The birth date
          format: date-time
        contactRole:
          type: string
          description: The contact role
          example: TRUST_ADMINISTRATOR
        department:
          type: string
          description: The department of the contact
          example: Legal
        description:
          type: string
          description: Additional notes on the record
          example: 'Trade # 120 has been executed'
        doNotCall:
          type: boolean
          description: The do not call flag
          example: false
        doNotShare:
          type: boolean
          description: The do not share flag
          example: false
        emailAddress1:
          type: string
          description: The first email address
          example: john.smith@abz.com
        emailAddress2:
          type: string
          description: The second email address
          example: john.smith@abz.com
        emailAddressAutoBcc:
          type: string
          description: The auto bcc email address
          example: john.smith@abz.com
        emailOptOut:
          type: boolean
          description: The email opt out flag
          example: false
        emailVerified:
          type: boolean
          description: The verified email flag
          example: false
        ethnicity:
          type: string
          description: The ethnicity
          example: Ibo
        fax:
          type: string
          description: The fax number
          example: '+234700000000'
        firstName:
          type: string
          description: The first name
          example: John
        forcePasswordReset:
          type: boolean
          description: The force password reset flag
          example: false
        headOfHousehold:
          type: boolean
          description: The head of household  flag
          example: false
        homePhone:
          type: string
          description: The home phone number
          example: '+234700000000'
        identifier:
          type: string
          description: 'A unique contact identifier e.g Drivers License #'
          example: '00000000000'
        invalidEmailAddress:
          type: boolean
          description: The invalid email address flag
          example: false
        kycAvailable:
          type: boolean
          description: The KYC available flag
          example: false
        label:
          type: string
          description: The label of the contact
          example: Steve Jobs
        lastLoginDttm:
          type: string
          description: Tracks the last login date and time
          format: date-time
        lastLoginIPAddress:
          type: string
          description: Tracks the last IP address used to access the portal
          example: 196.1.1.1
        lastName:
          type: string
          description: The last name
          example: Jobs
        leadSource:
          type: string
          description: The lead source
          example: Conference
        maritalStatus:
          type: string
          description: The marital status (MARRIED, SINGLE, DIVORCED)
          example: MARRIED
        middleName:
          type: string
          description: The middle name
          example: Adam
        mobilePhone:
          type: string
          description: The cell phone number
          example: '+234700000000'
        name:
          type: string
          description: 'The system record # of the record'
          example: '1000'
        noOfDependents:
          type: integer
          description: The number of dependents
          format: int32
          example: 4
        officePhone:
          type: string
          description: The office phone number
          example: '+234700000000'
        organization:
          type: string
          description: The name of the organization that the contact belongs to
          example: RCG Construction
        otherPhone:
          type: string
          description: The alternative phone number
          example: '+234700000000'
        preferredContactMethod:
          type: string
          description: 'The preferred contact method '
          example: PHONE
        preferredContactTime:
          type: string
          description: 'The preferred contact time '
          example: 6-8 PM
        prefix:
          type: string
          description: The prefix
          example: Senator
        primaryCity:
          type: string
          description: The primary city
          example: Ikoyi
        primaryCountry:
          type: string
          description: The primary country
          example: NG
        primaryLatitude:
          type: number
          description: The primary latitude
          format: double
          example: 12.05
        primaryLongitude:
          type: number
          description: The primary longitude
          format: double
          example: 19.02
        primaryPostCode:
          type: string
          description: The primary post code
          example: '00435'
        primaryState:
          type: string
          description: The primary state
          example: Lagos
        primaryStreet:
          type: string
          description: The primary address line 1
          example: 123 Hillcrest Road
        primaryStreet1:
          type: string
          description: The primary address line 2
          example: Off Richmond Avenue
        secondaryCity:
          type: string
          description: The secondary city
          example: Ikoyi
        secondaryCountry:
          type: string
          description: The secondary country
          example: NG
        secondaryLatitude:
          type: number
          description: The secondary latitude
          format: double
          example: 12.05
        secondaryLongitude:
          type: number
          description: The secondary longitude
          format: double
          example: 19.02
        secondaryPostCode:
          type: string
          description: The secondary post code
          example: '00435'
        secondaryState:
          type: string
          description: The secondary state
          example: Lagos
        secondaryStreet:
          type: string
          description: The secondary address line 1
          example: 123 Hillcrest Road
        secondaryStreet1:
          type: string
          description: The secondary address line 2
          example: Off Richmond Avenue
        profession:
          type: string
          description: The profession
          example: Engineer
        salutation:
          type: string
          description: 'The salutation '
          example: Chief
        secretQuestion:
          type: string
          description: Secret question used for account recovery
          example: What is your favourite color
        secretAnswer:
          type: string
          description: Secret answer used for account recovery
          example: Blue
        sex:
          type: string
          description: The sex
          example: MALE
        smsOptOut:
          type: boolean
          description: SMS opt out flag
          example: false
        suffix:
          type: string
          description: The suffix
          example: Jnr
        title:
          type: string
          description: The title
          example: Mr.
        workflowNotes:
          type: string
          description: Notes from the workflow engine related to the record
          example: Additional text
    CaseWS:
      type: object
      properties:
        id:
          type: integer
          description: The system ID of the record
          format: int64
          example: 1000
        account:
          type: integer
          description: The ID of the customer that the record is related to
          format: int64
          example: 1000
        contact:
          type: integer
          description: The ID of the contact record related to this case
          format: int64
          example: 1000
        assignedTo:
          type: integer
          description: The ID of the employee that the record is assigned to
          format: int64
          example: 1000
        accountLabel:
          type: string
          description: The label of the customer that the record is related to
          example: John Smith
        accountName:
          type: string
          description: 'The account # of the customer that the record is related to'
          example: '00000001'
        actionTaken:
          type: string
          description: Summary of the action taken
          example: Refunded the charges
        active:
          type: boolean
          description: Indicates if the record is active
          example: true
        caseOwner:
          type: string
          description: The name of the employee or department that owns the case
          example: Customer Service
        caseSummary:
          type: string
          description: Summary of the complaint
          example: Was charged management fees
        category:
          type: string
          description: Category of the case
          example: Complaints
        addressLine1:
          type: string
          description: The address line 1
          example: 123 Hillcrest Road
        addressLine2:
          type: string
          description: The address line 2
          example: Off Richmond Avenue
        city:
          type: string
          description: The  city
          example: Ikoyi
        state:
          type: string
          description: The state
          example: Lagos
        country:
          type: string
          description: The country
          example: NG
        postCode:
          type: string
          description: The post code
          example: '00435'
        prefContactAddress:
          type: string
          description: The preferred contact address
          example: 123 Hillcrest Road
        prefContactEmail:
          type: string
          description: The preferred contact email
          example: hello@email.com
        prefContactPhone:
          type: string
          description: The preferred contact phone
          example: '+23400000000'
        openedDttm:
          type: string
          description: The date the case was opened
          format: date-time
        closedDttm:
          type: string
          description: The date the case was closed
          format: date-time
        expectedCloseDttm:
          type: string
          description: The forecasted close date
          format: date-time
        label:
          type: string
          description: The label of the case
          example: Management Fee Charges
        description:
          type: string
          description: Additional notes on the record
          example: 'Trade # 120 has been executed'
        emailAddress:
          type: string
          description: The email address
          example: john.smith@abz.com
        firstName:
          type: string
          description: The first name
          example: John
        lastName:
          type: string
          description: The last name
          example: Jobs
        middleName:
          type: string
          description: The middle name
          example: Adam
        mobilePhone:
          type: string
          description: The cell phone number
          example: '+234700000000'
        name:
          type: string
          description: 'The system record # of the record'
          example: '1000'
        officePhone:
          type: string
          description: The office phone number
          example: '+234700000000'
        origin:
          type: string
          description: The origin of the case
          example: WEB
        otherPhone:
          type: string
          description: The alternative phone number
          example: '+234700000000'
        partnerRemarks:
          type: string
          description: Additional notes from the client
          example: Please see the account opening documents
        priority:
          type: string
          description: The case priority
          example: HIGH
          enum:
            - LOW
            - MEDIUM
            - HIGH
            - CRITICAL
        reason:
          type: string
          description: The case reason
          example: Reversal of charges
        resolution:
          type: string
          description: The case resolution
          example: The charges were reversed
        rootCause:
          type: string
          description: The root cause
          example: WRONG_CONFIGURATION
        status:
          type: string
          description: The status
          example: CLOSED
          enum:
            - NEW
            - ASSIGNED
            - RESOLVED
            - CLOSED
            - PENDING_INPUT
            - REJECTED
        subCategory:
          type: string
          description: The sub category
          example: COMPLAINTS
        subject:
          type: string
          description: The subject
          example: Reversal of charges
        type:
          type: string
          description: The case type
          example: Compliant
        workflowNotes:
          type: string
          description: Notes from the workflow engine related to the record
          example: Additional text
    CampaignWS:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the record is active
          example: true
        actualCost:
          type: number
          description: The actual cost of the campaign
          format: double
          example: 5000000
        assignedTo:
          type: integer
          description: The ID of the employee that the record is assigned to
          format: int64
          example: 1000
        budget:
          type: number
          description: The campaign budget
          format: double
          example: 1000000
        currency:
          type: string
          description: The campaign currency
          example: NGN
        description:
          type: string
          description: Additional notes on the record
          example: 'Trade # 120 has been executed'
        expectedCost:
          type: number
          description: The expected cost
          format: double
          example: 1000000
        expectedRevenue:
          type: number
          description: The expected revenue
          format: double
          example: 1000000
        frequency:
          type: string
          description: The frequency
          example: WEEKLY
        fromAddress:
          type: string
          description: The address used to send campaign communication
          example: hello@firm.com
        fromName:
          type: string
          description: The name used to send campaign communication
          example: Firm Invst. Plc.
        id:
          type: integer
          description: The system ID of the record
          format: int64
          example: 1000
        label:
          type: string
          description: The label of the campaign
          example: New Product (Email)
        name:
          type: string
          description: 'The system record # of the record'
          example: '000001'
        objective:
          type: string
          description: The campaign objective
          example: Email all new clients
        replyToAddress:
          type: string
          description: The reply to address used to send campaign communication
          example: hello@firm.com
        startDate:
          type: string
          description: The start date
          format: date-time
        endDate:
          type: string
          description: The end date
          format: date-time
        status:
          type: string
          description: The status
          example: RUNNING
          enum:
            - DRAFT
            - RUNNING
            - ENDED
        template:
          type: integer
          description: The ID of the template used
          format: int64
          example: 1000
        type:
          type: string
          description: The type of campaign
          example: EMAIL
          enum:
            - WEB
            - EMAIL
            - RADIO
            - PRINT
            - MAIL
            - TELESALES
            - SMS
            - TELEVISION
        workflowNotes:
          type: string
          description: Notes from the workflow engine related to the record
          example: Additional text
    CallWS:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the record is active
          example: true
        assignedTo:
          type: integer
          description: The ID of the employee that the communication record is assigned to
          format: int64
          example: 1000
        attachmentsWS:
          type: array
          items:
            $ref: '#/components/schemas/NoteWS'
        direction:
          type: string
          description: Indicates the direction of the message
          example: INBOUND
          enum:
            - INBOUND
            - OUTBOUND
        campaign:
          type: integer
          description: The ID of the campaign record if it was sent as part of a campaign
          format: int64
          example: 1000
        description:
          type: string
          description: Additional notes on the message
          example: 'Trade # 120 has been executed'
        endDttm:
          type: string
          description: Indicates when the call ended
          format: date-time
        id:
          type: integer
          description: The system ID of the record
          format: int64
          example: 1000
        label:
          type: string
          description: The system label of the record
          example: '0000001'
        name:
          type: string
          description: 'The system record # of the record'
          example: '1000'
        relatedToId:
          type: integer
          description: The ID of the system record that the file is related to
          format: int64
          example: 1000
        relatedTo:
          type: string
          description: The type of system record that the file is related to
          example: CUSTOMER
          enum:
            - CONTACT
            - CASE
            - OPPORTUNITY
            - PROJECT
            - PROJECT_TASK
            - CAMPAIGN
            - TEMPLATE
            - LEAD
            - CUSTOMER
            - EMPLOYEE
        startDttm:
          type: string
          description: Indicates when the call started
          format: date-time
        status:
          type: string
          description: The status of the message
          example: SENT
          enum:
            - IN_PROGRESS
            - COMPLETE
            - DRAFT
            - PLANNED
            - ARCHIVED
            - SENT
            - NOT_DELIVERED
            - CANCELED
        subject:
          type: string
          description: The subject
          example: ORDER NOTIFICATION
        template:
          type: integer
          description: The ID of the template used
          format: int64
          example: 1000
        workflowNotes:
          type: string
          description: Notes from the workflow engine related to the record
          example: Additional text
        outcome:
          type: string
          description: The outcome of the call
          example: Scheduled a follow up call
    MWorkflowRequest:
      required:
        - docType
        - documentId
        - processName
      type: object
      properties:
        documentId:
          type: string
          description: The document ID of the workflow record. This is usually the name property of any given record type
          example: '000000001'
        docType:
          type: string
          description: The document type from the list of supported documents type
          example: CUSTOMER
        processName:
          type: string
          description: The process ID as configured in the workflow engine
          example: Customer/NewAccount
    MWFStatusUpdateRequest:
      type: object
      properties:
        processMgr:
          type: string
          description: The process ID from the workflow engine
          example: Customer/NewAccount
        active:
          type: boolean
          description: Indicates if the record should be left active after the workflow
          example: true
        processKey:
          type: string
          description: The process key from the workflow engine that identifies a specific process instance
          example: Customer/NewAccount/001
        workflowStatus:
          type: string
          description: The status of the workflow
          example: APPROVED
        workflowNotes:
          type: string
          description: The notes captured in the workflow engine that will be used to update the record
          example: Notes from the workflow engine
    MWFNotificationRequest:
      required:
        - assigneeType
        - email
      type: object
      properties:
        email:
          type: string
          description: The email address where the workflow notification will be sent
          example: foor@bar.com
        candidate:
          type: boolean
          description: Indicates if the notification is for a candidate assignment or an actual assignment. When true, it means that the task has been assigned to the recipient and he/she will not have to first claim it before completing the task
          example: false
        taskId:
          type: string
          description: The task ID in the workflow engine
          example: ddd-aaa-sdddd-aaa
        assigneeId:
          type: string
          description: The assignee ID in the workflow engine
          example: ddd-aaa-sdddd-aaa
        taskUrl:
          type: string
          description: The task URL in the workflow engine
          example: ddd-aaa-sdddd-aaa
        taskKey:
          type: string
          description: The task key in the workflow engine
          example: ddd-aaa-sdddd-aaa
        assigneeType:
          type: string
          description: The assignee type ie USER | GROUP
          example: USER
          enum:
            - USER
            - GROUP
    MPassCodeRequest:
      required:
        - channel
      type: object
      properties:
        email:
          type: string
          description: The email address where the password will be sent
          example: foor@bar.com
        cellPhone:
          type: string
          description: The cell phone address where the passcode will be sent
          example: '+12345566666'
        channel:
          type: string
          description: The channel(s) to which the password will be sent
          example: SMS_AND_EMAIL
          enum:
            - SMS
            - NONE
            - EMAIL
            - WHATSAPP
            - SMS_AND_EMAIL
    MPassCodeResponse:
      type: object
      properties:
        id:
          type: string
          description: The ID of the passcode that was generated
          example: abbba-ddkk-kkddd
        expirationDttm:
          type: string
          description: The time when the generated passcode will expire
          format: date-time
    MTermInstrument:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        instrumentTypeName:
          type: string
          description: The code for the instrument type
          example: '000000001'
        instrumentTypeLabel:
          type: string
          description: The label for the instrument type
          example: Fixed Deposits
        initAccountId:
          type: integer
          description: The ID of the cash account that will be used to post the start of the instrument
          format: int64
          example: 1000
        terminationAccountId:
          type: integer
          description: The ID of the cash account that will be used to post the termination of the instrument
          format: int64
          example: 1000
        customerId:
          type: integer
          description: The ID of customer
          format: int64
          example: 1000
        customerName:
          type: string
          description: The code of customer
          example: '00000001'
        customerLabel:
          type: string
          description: The label of customer
          example: John Smith
        portfolioName:
          type: string
          description: The code of portfolio
          example: '00000001'
        portfolioLabel:
          type: string
          description: The label of portfolio
          example: John Smith (Discretionary)
        startDate:
          type: string
          description: The start date
          format: date-time
        tenure:
          type: integer
          description: The tenor (days)
          format: int32
          example: 365
        expectedMaturity:
          type: string
          description: The expected maturity date
          format: date-time
        terminationDate:
          type: string
          description: The termination date if it has matured, rolled over or was terminated
          format: date-time
        currency:
          type: string
          description: The currency
          example: NGN
        faceValue:
          type: number
          description: The face value
          example: 10000000
        expectedInterest:
          type: number
          description: The expected gross interest
          example: 100000
        expectedNetInterest:
          type: number
          description: The expected net interest
          example: 100000
        accruedInterest:
          type: number
          description: The interest that has accrued
          example: 20000
        accruedNetInterest:
          type: number
          description: The net interest that has accrued
          example: 20000
        currentRate:
          type: number
          description: The current interest rate (%) that applies to the instrument
          example: 10
        rolloverAmount:
          type: number
          description: A specific amount to roll over at maturity
          example: 10000
        autoRollover:
          type: boolean
          description: Indicates if the investment should automatically be rolled over at maturity
          example: true
        loanProduct:
          type: boolean
          description: Indicates if the product is a loan product
          example: false
        rolloverRule:
          type: string
          description: |-
            The roll over rule. The valid values are NO_ROLLOVER,
                    PRINCIPAL,
                    INTEREST,
                    PRINCIPAL_INTEREST,
                    SPECIFIC_AMOUNT
          example: 'true'
        status:
          type: string
          description: The current status of the instrument
          example: RUNNING
        rolledOver:
          type: boolean
          description: Indicates if the investment rolled over
          example: false
        parentId:
          type: integer
          description: The ID of the parent instrument if it rolled over
          format: int64
          example: 1000
    MPortfolio:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        rank:
          type: integer
          description: The rank of the portfolio based on the end of day valuation
          format: int32
          example: 1
        customerId:
          type: integer
          description: The ID of customer that owns the portfolio
          format: int64
          example: 1000
        cashAccountName:
          type: string
          description: The name of customer that owns the portfolio
          example: John Smith
        cashAccountId:
          type: integer
          description: The ID of cash account that is attached to the portfolio
          format: int64
          example: 1000
        customerName:
          type: string
          description: The name of cash account that is attached to the portfolio
          example: John Smith (Default Cash)
        portfolioClass:
          type: string
          description: The class of the portfolio
          example: EXCHANGE
        portfolioType:
          type: string
          description: The code of the portfolio type
          example: '00000001'
        securityExchange:
          type: string
          description: The code of the market where the portfolio is used to trade
          example: NGX
        accountNo:
          type: string
          description: The CDS account number of the portfolio
          example: '123429994'
        clearingHouseNo:
          type: string
          description: The CDS clearing account number of the portfolio
          example: CHN000011
        dateOpened:
          type: string
          description: The date the account was opened at the CDS
          format: date-time
        currentValuation:
          $ref: '#/components/schemas/Money'
        marginTradingPower:
          $ref: '#/components/schemas/Money'
        marginPortfolioValue:
          $ref: '#/components/schemas/Money'
        marginMinMaintainValue:
          $ref: '#/components/schemas/Money'
        marginCallValue:
          $ref: '#/components/schemas/Money'
        marginEquityValue:
          $ref: '#/components/schemas/Money'
        costBasis:
          $ref: '#/components/schemas/Money'
        availableCash:
          $ref: '#/components/schemas/Money'
        availableCredit:
          $ref: '#/components/schemas/Money'
        custodian:
          type: boolean
          description: Indicates if this is a custodian portfolio
        portfolioHoldings:
          type: array
          items:
            $ref: '#/components/schemas/MPortfolioHolding'
        percGain:
          type: number
          format: double
    MPortfolioHolding:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        portfolioId:
          type: integer
          description: The ID of portfolio that owns this record
          format: int64
          example: 1000
        securityName:
          type: string
          description: The symbol or ID of the security
          example: ACCESS
        securitySector:
          type: string
          description: The sector that the security belongs to
          example: BANKING
        securityLabel:
          type: string
          description: The security description
          example: Access Bank Plc
        securityType:
          type: string
          description: The security type
          example: EQUITY
        securityExchange:
          type: string
          description: The security exchange
          example: NGX
        securityId:
          type: integer
          description: The internal ID of the security
          format: int64
          example: 1000
        quantityHeld:
          type: number
          description: The quantity held
          example: 1000
        costBasis:
          type: number
          description: The cost basis
          example: 200000
        marketPrice:
          type: number
          description: The current market price
          example: 10
        marketValue:
          type: number
          description: The current market value of the position based on the market price
          example: 200000
        valuation:
          type: number
          description: The current market value of the position based on the valuation currency
          example: 200000
        valueDate:
          type: string
          description: The valuation date. Note that the valuation will use the security price for this date
          format: date-time
        gain:
          type: number
          description: The absolute gain
          example: 100
        percentGain:
          type: number
          description: The percent gain
          example: 10
        pendingDividend:
          type: number
          description: Dividend that has not been received gain
          example: 100
        couponRate:
          type: number
          description: Coupon rate for bond positions
          example: 10
        dirtyPrice:
          type: number
          description: Dirty price for bond positions
          example: 101.5
        maturityDate:
          type: string
          description: Maturity date for bond positions
          format: date-time
        lastCouponDate:
          type: string
          description: Last coupon date for bond positions
          format: date-time
        parValue:
          type: number
          description: Par value for bond positions
          example: 100
        priceValueMultiple:
          type: number
          description: Price to multiple ration for bond positions
          example: 10
    Money:
      type: object
      properties:
        currency:
          type: string
          description: The currency code
          example: NGN
        amount:
          type: number
          description: The amount
          example: 100000000
      description: The margin credit balance if applicable
    MFundTransaction:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        transType:
          type: string
          description: The transaction type (SUBSCRIPTION | REDEMPTION)
          example: SUBSCRIPTION
        orderBase:
          type: string
          description: The order base (QUANTITY | VALUE)
          example: QUANTITY
        orderOrigin:
          type: string
          description: The order origin
          example: WEB
        status:
          type: string
          description: The order status
          example: PENDING
        batchName:
          type: string
          description: The batch code
          example: '00000000'
        fundId:
          type: integer
          description: The fund ID
          format: int64
          example: 100000
        fundName:
          type: string
          description: The fund code
          example: MIXE_001
        fundLabel:
          type: string
          description: The fund label
          example: Mixed Fund
        customerId:
          type: integer
          description: The customer ID
          format: int64
          example: 100000
        customerName:
          type: string
          description: The customer code
          example: '0000001'
        customerLabel:
          type: string
          description: The customer label
          example: John Smith
        portfolioId:
          type: integer
          description: The portfolio ID
          format: int64
          example: 100000
        portfolioName:
          type: string
          description: The portfolio code
          example: '0000001'
        portfolioLabel:
          type: string
          description: The portfolio label
          example: John Smith (Discretionary)
        cashAccountId:
          type: integer
          description: The cash account ID
          format: int64
          example: 100000
        cashAccountName:
          type: string
          description: The cash account code
          example: '000001'
        cashAccountLabel:
          type: string
          description: The cash account label
          example: John Smith (Default)
        cashAccountBal:
          $ref: '#/components/schemas/Money'
        transactionDate:
          type: string
          description: The transaction date. This is the effective date for the posted transaction
          format: date-time
        orderDate:
          type: string
          description: The Order date. The date that the order was captured
          format: date-time
        currency:
          type: string
          description: The currency
          example: NGN
        transUnits:
          type: number
          description: The number of transaction units
          example: 10000
        transAmount:
          type: number
          description: The transaction amount
          example: 10000000
        unitPrice:
          type: number
          description: The unit price for each fund unit based on the valuation (BID / OFFER)
          example: 100
        transPrice:
          type: number
          description: The transaction price for the subscription or redemption
          example: 100
        transConsideration:
          type: number
          description: The transaction consideration
          example: 100
        transPenalty:
          type: number
          description: The transaction penalty if applicable
          example: 0
        transValue:
          type: number
          description: The total transaction value
          example: 1000000
    MPartnerCashTransaction:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        batchName:
          type: string
          description: The batch code
          example: '00000000'
        transactionDate:
          type: string
          description: The transaction date. The date that the transaction was captured
          format: date-time
        valueDate:
          type: string
          description: The value date. This is the effective date for the posted transaction
          format: date-time
        transState:
          type: string
          description: The current status of the transaction
          example: '2045-01-01'
        businessOfficeName:
          type: string
          description: The business office code
          example: '00000001'
        transType:
          type: string
          description: |-
            The transaction type - SUBSCRIPTION,
                    RECEIPT,
                    MARGIN_RECEIPT,
                    PAYMENT,
                    FEES,
                    TRANSFER,
                    STANDING_ORDER
          example: RECEIPT
        transMethod:
          type: string
          description: The transaction method
          example: DIRECT
        partnerId:
          type: integer
          description: The ID of customer
          format: int64
          example: 1000
        partnerName:
          type: string
          description: The code of customer
          example: '0000000'
        currency:
          type: string
          description: The currency
          example: NGN
        amount:
          type: number
          description: The amount
          example: 10000000
        processingFees:
          type: number
          description: The processing fees
          example: 100
        processingFeeType:
          type: string
          description: The processing fee type
          example: Bank Charges
        earlyWithdrawalRate:
          type: number
          description: The early withdrawal rate (%). This applies when a payment is made before the settlement date of a transaction and a fee is to be charged
          example: 2
        maxNoOfDebits:
          type: integer
          description: 'Indicates the maximum # of payments allowed in a given period'
          format: int32
          example: 1
        noOfExecutedDebits:
          type: integer
          description: 'The number # of payments already processed in a given period'
          format: int32
          example: 1
        contraAcctId:
          type: integer
          description: The ID of the bank or contra account
          format: int64
          example: 1000
        processingFeeAcctId:
          type: integer
          description: The ID of the fee account
          format: int64
          example: 1000
        processingFeeAcctName:
          type: string
          description: The code of the fee account
          example: '10000000'
        contraAcctName:
          type: string
          description: The code of the contra account
          example: '10000000'
        cashAccountId:
          type: integer
          description: The ID of the clients cash account
          format: int64
          example: 1000
        cashAccountName:
          type: string
          description: The code of the clients cash account
          example: '1000'
        counterPartyPartnerName:
          type: string
          description: The code of the counter party customer when processing transfers
          example: '1000'
        counterPartyCashAccount:
          type: string
          description: The code of the counter party cash account when processing transfers
          example: '1000'
        reference:
          type: string
          description: Any reference information
          example: 'CHQ # 123'
        bankStmtCleared:
          type: boolean
          description: Indicates if this transaction has been reconciled in the bank statement
          example: true
        corpAction:
          type: boolean
          description: Indicates if this transaction is related to a corporate action
          example: false
        approvedBy:
          type: integer
          description: The ID of the employee that approved the transaction
          format: int64
          example: 1000
        postJournalName:
          type: string
        transProcessorResponse:
          type: string
          description: The response received a transaction processor
          example: Successfully transferred
        transactionProcessor:
          type: string
          description: The transaction processor
          example: Provider X
        transProcessorRef:
          type: string
          description: 'The transaction processor reference #'
          example: Ref 123
        transProcessorSuccessful:
          type: boolean
          description: Indicates if the transaction was successful on the gateway
          example: true
        paymentGatewayId:
          type: integer
          description: The system ID of the configured gateway.
          format: int64
          example: 1000
        businessOfficeId:
          type: string
          writeOnly: true
    MPortalConfig:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        defaultDateFormat:
          type: string
          description: The default date format
          example: yyyy-MM-dd
        defaultCountryCode:
          type: string
          description: The default country code
          example: NG
        baseCurrency:
          type: string
          description: The default currency
          example: NGN
        defPortalPortfolioType:
          type: string
          description: The default portfolio type code
          example: '0000001'
        defPortalBusinessOffice:
          type: string
          description: The default business office code
          example: '0000001'
        defPortalCustomerGroup:
          type: string
          description: The default customer group code
          example: '0000001'
        defPortalBroker:
          type: string
          description: The default broker code
          example: '0000001'
        defPaymentGateway:
          type: string
          description: The default payment gateway code
          example: '0000001'
        contactUsLink:
          type: string
          description: The url for the contact us link in the portal
          example: https://www.mysite.com/contact
        disclaimerLink:
          type: string
          description: The url for the disclaimer link in the portal
          example: https://www.mysite.com/disclaimer
        privacyLink:
          type: string
          description: The url for the privacy link in the portal
          example: https://www.mysite.com/privacy
        securityLink:
          type: string
          description: The url for the security link in the portal
          example: https://www.mysite.com/security
        homeLink:
          type: string
          description: The url for the home link in the portal
          example: https://www.mysite.com/home
        mdsUrl:
          type: string
          description: The url for the MDS data feed
          example: https://mds-mysite.zanibal.com/mds
        apiUrl:
          type: string
          description: The url for the api services
          example: https://api-mysite.zanibal.com/mds
        mdsUsername:
          type: string
          description: The mds username
          example: username
        mdsPassword:
          type: string
          description: The mds password
          example: password
        defaultMarketId:
          type: string
          description: The default market ID
          example: NGX
        defaultIndexCode:
          type: string
          description: The default index code
          example: NSEI
        brokerId:
          type: string
          description: The default broker ID
          example: '10000'
        defPGWMinAmount:
          type: number
          description: The default payment gateway minimum amount
          format: double
          example: 100
        defOrderTermName:
          type: string
          description: The default order term code
          example: '0000001'
        portalType:
          type: string
          description: The portal type (SECURITIES | ASSET | BOTH)
          example: BOTH
        portalPassCodeChannel:
          type: string
          description: The channel for delivering pass codes when using the portal
          example: EMAIL
        defOrderTermLabel:
          type: string
          description: The default order term label
          example: Good For A Day
        defSecTradingFeeRate:
          type: number
          description: The default rate (%) for processing trading transactions
          format: double
          example: 1.25
        tenants:
          type: array
          description: The list of tenants configured in the system
          items:
            $ref: '#/components/schemas/Tenant'
        passwordPattern:
          type: string
          description: The regular expression for validating passwords
          example: (?=^.{8,}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$
        minPasswordLength:
          type: integer
          description: Specifies the minimum password length
          format: int32
          example: 8
        requireUpperCaseCharacter:
          type: boolean
          description: Indicates if an upper case is required for passwords
          example: true
        requireLowercaseCharacter:
          type: boolean
          description: Indicates if an upper case is required for passwords
          example: true
        requireANumber:
          type: boolean
          description: Indicates if a lower case is required for passwords
          example: true
        requireNANCharacter:
          type: boolean
          description: Indicates if a special character is required for passwords
          example: true
    Tenant:
      type: object
      properties:
        id:
          type: integer
          description: The system ID of a tenant
          format: int64
          example: 10000
        label:
          type: string
          description: The label of a tenant
          example: Asset Management Subsidiary
      description: The list of tenants configured in the system
    MPickList:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The system ID of a pick list
          example: SECTOR_CODE
        label:
          type: string
          description: The system label of a pick list
          example: Sector Codes
        description:
          type: string
          description: The record description
          example: Notes on record
        type:
          type: string
          description: The type of pick list
          example: SYSTEM
        pickListItems:
          type: array
          items:
            $ref: '#/components/schemas/MPickListItem'
    MPickListItem:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
    AppHealthView:
      type: object
      properties:
        dbHealthy:
          type: boolean
          description: Indicates if the database is healthy
          example: true
        cacheHealthy:
          type: boolean
          description: Indicates if the distributed cache cluster is healthy
          example: true
        jmsHealthy:
          type: boolean
          description: Indicates if the message system is healthy
          example: true
      description: Describes an address in the system
    MAgent:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        picture:
          type: string
          description: 'Base 64 encoded string data for the picture '
        pictureFileName:
          type: string
          description: The picture file name
          example: passport.png
        pictureMimeType:
          type: string
          description: The picture file mime type
          example: image/png
        signature:
          type: string
          description: Base 64 encoded string data for the signature
        signatureFileName:
          type: string
          description: The signature file name
          example: signature.png
        signatureMimeType:
          type: string
          description: The signature file mime type
          example: image/png
        identification:
          type: string
          description: Base 64 encoded string data for the means of identification
        identificationFileName:
          type: string
          description: The ID file name
          example: license.png
        identificationMimeType:
          type: string
          description: The ID file mime type
          example: image/png
        utilityBill:
          type: string
          description: Base 64 encoded string data for the utility bill
        utilityBillFileName:
          type: string
          description: The utility bill file name
          example: utility.png
        utilityBillMimeType:
          type: string
          description: The utility bill file mime type
          example: image/png
        logo:
          type: string
          description: Base 64 encoded string data for the logo
        logoFileName:
          type: string
          description: The logo file name
          example: logo.png
        logoMimeType:
          type: string
          description: The logo file mime type
          example: image/png
        cashAcct:
          type: string
          description: 'The cash account #'
          example: '0000001'
        cashAcctBalance:
          type: string
          description: The cash account balance
          example: '10000.5'
        title:
          type: string
          description: The title
          example: Mr.
        firstName:
          type: string
          description: The first name
          example: John
        middleName:
          type: string
          description: The middle name
          example: Adam
        lastName:
          type: string
          description: The last name
          example: Smith
        cellPhone:
          type: string
          description: The cell phone number
          example: '+234700000000'
        homePhone:
          type: string
          description: The home phone number
          example: '+234700000000'
        otherPhone:
          type: string
          description: The other phone number
          example: '+234700000000'
        officePhone:
          type: string
          description: The office phone number
          example: '+234700000000'
        fax:
          type: string
          description: The fax number
          example: '+234700000000'
        emailAddress1:
          type: string
          description: The first email address
          example: john.smith@abz.com
        emailAddress2:
          type: string
          description: The second email address
          example: john.smith@abz.com
        birthDate:
          type: string
          description: The birth date
          format: date-time
        nationality:
          type: string
          description: The nationality
          example: British
        motherMaidenName:
          type: string
          description: The mothers maiden name
          example: Adam
        identifier:
          type: string
          description: 'A unique client identifier e.g Drivers License #'
          example: '00000000000'
        primaryAddress1:
          type: string
          description: The primary address line 1
          example: 123 Hillcrest Road
        primaryCity:
          type: string
          description: The primary city
          example: Ikoyi
        primaryPostCode:
          type: string
          description: The primary post code
          example: '00435'
        primaryState:
          type: string
          description: The primary state
          example: Lagos
        primaryCountry:
          type: string
          description: The primary country
          example: NG
        secondaryAddress1:
          type: string
          description: The secondary address line 1
          example: 123 Hillcrest Road
        secondaryCity:
          type: string
          description: The secondary city
          example: Ikoyi
        secondaryPostCode:
          type: string
          description: The secondary state
          example: Lagos
        secondaryState:
          type: string
          description: The secondary state
          example: Lagos
        secondaryCountry:
          type: string
          description: The secondary city
          example: NG
        portalUserName:
          type: string
          description: Unique username for accessing the portal and mobile platforms
          example: john.smith
        portalPassword:
          type: string
          description: A portal password that meets the password policy configured for the tenant
          example: xxxxxxx
        allowDebitBalance:
          type: boolean
          description: Indicates if debit balances are allowed
          example: true
        lastLoginIPAddress:
          type: string
          description: Tracks the last IP address used to access the portal
          example: 196.1.1.1
        lastLoginDttm:
          type: string
          description: Tracks the last login date and time
          format: date-time
        secretQuestion:
          type: string
          description: Secret question used for account recovery
          example: What is your favourite color
        secretAnswer:
          type: string
          description: Secret answer used for account recovery
          example: Blue
        forcePasswordReset:
          type: boolean
          description: Indicates if a mandatory password reset is required on next login
          example: false
        passwordResetToken:
          type: string
          description: A token generated during the password reset process
          example: '112233'
          deprecated: true
        alertsEmail:
          type: string
          description: Email address to be used to notifications if different from the main email address
          example: john.smith@xxx.com
        profession:
          type: string
          description: The profession
          example: Engineer
        salesRepName:
          type: string
          description: The system code for the relationship manager
          example: '100000'
        businessOfficeName:
          type: string
          description: The system code for the business office
          example: '100000'
        partnerType:
          type: string
          description: The partner type (INDV | CORP)
          example: INDV
        category:
          type: string
          description: The category
          example: CAT1
        channel:
          type: string
          description: The channel
          example: WEB
        isSubBroker:
          type: boolean
          description: Indicates if this is a sub broker
          example: false
    JSONDocumentTO:
      type: object
      properties:
        count:
          type: integer
          description: The record count
          format: int32
          example: 100
        result:
          type: array
          description: The results
          items:
            type: object
            description: The results
    MSecurity:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        cashAccountControlId:
          type: integer
          description: The control account ID for cash accounts
          format: int64
          example: 100
        index:
          type: boolean
          description: Indicates if this is an index
          example: false
        marginable:
          type: boolean
          description: Indicates if this is marginable
          example: false
        yield:
          type: number
          description: Yield for bonds
          example: 12
        bidPrice:
          type: number
          description: Bid price for funds
          example: 100
        offerPrice:
          type: number
          description: Offer price for funds
          example: 101
        instrumentType:
          type: string
          description: The type of instrument
          example: EQUITY
        subSector:
          type: string
          description: Sub sector code
          example: BANKING
        assetCategory:
          type: string
          description: Asset category
          example: EQUITY
        address:
          type: string
          description: Address of the company
          example: 123 Blvd. Road, Ikoyi
        corporateGovernance:
          type: string
          description: Notes on corporate governance
          example: Notes on governance
        phone:
          type: string
          description: 'Phone # of the company'
          example: '+12309900000'
        webSite:
          type: string
          description: Website of the company
          example: www.mysite.com
        fullTimeEmployees:
          type: integer
          description: Number of full time employees
          format: int32
          example: 100000
        logoUrl:
          type: string
          description: The url to the image if stored on an external resource serer
        logo:
          type: string
          description: Base 64 encoded string data for the logo
        logoFileName:
          type: string
          description: The logo file name
          example: logo.png
        logoMimeType:
          type: string
          description: The logo file mime type
          example: image/png
        isinCode:
          type: string
          description: The security ISIN
          example: NG00199911111
        baseCurrency:
          type: string
          description: The listing currency
          example: NGN
        instrumentClass:
          type: string
          description: The instrument class
          example: GO
        nominalValue:
          type: number
          description: The nominal value
          example: 1
        currentValue:
          type: number
          description: The current value
          example: 100
        currentValueDate:
          type: string
          description: The current value date
          format: date-time
        sector:
          type: string
          description: Sector code
          example: BANKING
        issuerName:
          type: string
          description: Issuer name for bonds
          example: MTN Plc
        isListed:
          type: boolean
          description: Indicates if this is a listed security
          example: true
        securityExchange:
          type: string
          description: Indicates where the security is listed
          example: NGX
        listingDate:
          type: string
          description: The listing date
          format: date-time
        firstIssueDate:
          type: string
          description: The first issue date
          format: date-time
        firstIssueQuant:
          type: number
          description: The first issued number of shares
          example: 1000000000
        currOutstandQuant:
          type: number
          description: The current number of shares listed
          example: 1000000000
        fundState:
          type: string
          description: The status of a fund security
          example: OPEN
        issueDate:
          type: string
          description: The issue date for bonds
          format: date-time
        maturityDate:
          type: string
          description: The maturity date for bonds
          format: date-time
        nextCouponDate:
          type: string
          description: The next coupon date for bonds
          format: date-time
        lastCouponDate:
          type: string
          description: The last coupon date for bonds
          format: date-time
        dirtyPrice:
          type: number
          description: The dirty price for bonds
          example: 101.1
        issuePrice:
          type: number
          description: The issue price for bonds
          example: 100
        priceValueMultiple:
          type: number
          description: The price value multiple
          example: 10
        currentYield:
          type: number
          description: The current yield
          example: 10
        yieldToMaturity:
          type: number
          description: The yield to maturity for bonds
          example: 11
        couponRate:
          type: number
          description: The coupon rate for bonds
          example: 10
        couponType:
          type: string
          description: The coupon type for bonds
          example: SEMI_ANNUAL
        parValue:
          type: number
          description: The par value for bonds
          example: 100
        isssuersName:
          type: string
          description: The issuer name for bonds
          example: MTN Plc
        delistingDate:
          type: string
          description: The close date for a delisted security
          format: date-time
        listed:
          type: boolean
    KeyExecutive:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The executive's name
          example: Steve Harry
        description:
          type: string
          description: The record description
          example: Notes on record
        title:
          type: string
          description: The executive's title
          example: CEO
        salary:
          type: number
          description: The executive's salary
          format: double
        yearOfBirth:
          type: string
          description: The executive's year of birth
          example: 01/01/2000
      description: The key executives
    MSecurityOverview:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        securityId:
          type: integer
          description: The ID of a security
          format: int64
          example: 1000
        index:
          type: boolean
          description: Indicates if this is an index
          example: false
        sector:
          type: string
          description: Sector code
          example: BANKING
        symbol:
          type: string
          description: Symbol or security ID
          example: MTN
        exchange:
          type: string
          description: Market code
          example: NGX
        companyName:
          type: string
          description: Security description
          example: MTN Plc
        lastPrice:
          type: number
          description: Last traded price
          format: double
          example: 100
        lastPriceDttm:
          type: string
          description: Last traded price date and time
          format: date-time
          example: '2022-09-08T15:22:41.539Z'
        todaysChange:
          type: string
          description: The price change today
          example: '10'
        todaysChangeP:
          type: string
          description: The percent price change today
          example: '10'
        volume:
          type: number
          description: The volume traded
          format: double
          example: 10000000
        bidSize:
          type: integer
          description: The last bid size (top of the book)
          format: int64
          example: 1000
        askSize:
          type: integer
          description: The last offer size (top of the book)
          format: int64
          example: 1000
        bestBid:
          type: number
          description: The last bid price (top of the book)
          format: double
          example: 9.98
        bestAsk:
          type: number
          description: The last ask price (top of the book)
          format: double
          example: 10.5
        todaysOpen:
          type: string
          description: The opening price
          example: '9.9'
        previousClose:
          type: string
          description: The previous close
          example: '9.9'
        todaysLow:
          type: string
          description: The trading session low price
          example: '9.7'
        todaysHigh:
          type: string
          description: The trading session high price
          example: '10.7'
        y52WeekLow:
          type: string
          description: The 52 week low price
          example: '8.7'
        y52WeekHigh:
          type: string
          description: The 52 week high price
          example: '18.7'
        y52WeekLowDate:
          type: string
          description: The 52 week low date
          format: date-time
        y52WeekHighDate:
          type: string
          description: The 52 week high date
          format: date-time
        avg10dayVolume:
          type: string
          description: The 10 day average volume
          example: '1000000'
        priceEarnings:
          type: string
          description: The price to earnings ratio
          example: '20'
        earningsPerShare:
          type: string
          description: The earnings per share
          example: '3'
        marketCap:
          type: string
          description: The market capitalization
          example: '200000000000'
        unitsOutstanding:
          type: number
          description: The shares outstanding
          format: double
          example: 100000000
        beta:
          type: string
          description: The beta
          example: '1.2'
        dividendYield:
          type: string
          description: The dividend yield
          example: '12'
        declaredDividend:
          type: string
          description: The last declared dividend
          example: '10'
        exDividend:
          type: string
          description: The ex dividend
          example: '10'
        dividendPayableDate:
          type: string
          description: The dividend payable date
          format: date-time
        address:
          type: string
          description: Address of the company
          example: 123 Blvd. Road, Ikoyi
        corporateGovernance:
          type: string
          description: Notes on corporate governance
          example: Notes on governance
        phone:
          type: string
          description: 'Phone # of the company'
          example: '+12309900000'
        webSite:
          type: string
          description: Website of the company
          example: www.mysite.com
        fullTimeEmployees:
          type: integer
          description: Number of full time employees
          format: int32
          example: 100000
        keyExecutives:
          type: array
          description: The key executives
          items:
            $ref: '#/components/schemas/KeyExecutive'
    MSecurityNews:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        securityId:
          type: integer
          description: The ID of a security
          format: int64
          example: 1000
        securityCode:
          type: string
          description: Symbol or security ID
          example: MTN
        newsDttm:
          type: string
          description: News date and time
          format: date-time
          example: '2022-09-08T15:22:41.539Z'
        headLine:
          type: string
          description: The head line
          example: Earnings report
        shortHeadLine:
          type: string
          description: The short head line
          example: Earnings report
        source:
          type: string
          description: The news source
          example: Reuters
        body:
          type: string
          description: The news body
          example: Earnings report details
        shortBody:
          type: string
          description: The news short body
          example: Earnings report details
        url:
          type: string
          description: The link to the news article
          example: http://news.reuters.com/xxxxxxxx
    InvstMgtValuationTO:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        customerId:
          type: integer
          description: The ID of customer
          format: int64
          example: 1000
        customerName:
          type: string
          description: The code of customer
          example: '00000001'
        customerLabel:
          type: string
          description: The label of customer
          example: John Smith
        portfolioId:
          type: integer
          description: The ID of portfolio
          format: int64
          example: 1000
        portfolioName:
          type: string
          description: The code of portfolio
          example: '00000001'
        portfolioLabel:
          type: string
          description: The label of portfolio
          example: John Smith (Discretionary)
        equityValue:
          type: number
          description: The equity value
          example: 1000000
        equityCost:
          type: number
          description: The equity cost
          example: 100000
        equityPerc:
          type: number
          description: The equity percentage
          example: 20
        equityReturn:
          type: number
          description: The equity return
          example: 10
        bondValue:
          type: number
          description: The bond value
          example: 1000000
        bondCost:
          type: number
          description: The bond cost
          example: 100000
        bondPerc:
          type: number
          description: The bond percentage
          example: 20
        bondReturn:
          type: number
          description: The bond return
          example: 10
        fundValue:
          type: number
          description: The fund value
          example: 1000000
        fundCost:
          type: number
          description: The fund cost
          example: 100000
        fundPerc:
          type: number
          description: The fund percentage
          example: 20
        fundReturn:
          type: number
          description: The fund return
          example: 10
        commodityValue:
          type: number
          description: The commodity value
          example: 1000000
        commodityCost:
          type: number
          description: The commodity cost
          example: 100000
        commodityPerc:
          type: number
          description: The commodity percentage
          example: 20
        commodityReturn:
          type: number
          description: The commodity return
          example: 10
        derivativeValue:
          type: number
          description: The derivative value
          example: 1000000
        derivativeCost:
          type: number
          description: The derivative cost
          example: 100000
        derivativePerc:
          type: number
          description: The derivative percentage
          example: 20
        derivativeReturn:
          type: number
          description: The derivative return
          example: 10
        realEstateValue:
          type: number
          description: The real estate value
          example: 1000000
        realEstateCost:
          type: number
          description: The real estate cost
          example: 100000
        realEstatePerc:
          type: number
          description: The real estate percentage
          example: 20
        realEstateReturn:
          type: number
          description: The real estate return
          example: 10
        moneyMarketValue:
          type: number
          description: The money market value
          example: 1000000
        moneyMarketCost:
          type: number
          description: The money market cost
          example: 100000
        moneyMarketPerc:
          type: number
          description: The money market percentage
          example: 20
        moneyMarketReturn:
          type: number
          description: The money market return
          example: 10
        periodStart:
          type: string
          description: The period start
          format: date-time
        valuationDate:
          type: string
          description: The valuation date
          format: date-time
        portfolioHoldings:
          type: array
          description: The portfolios held by the customer
          items:
            $ref: '#/components/schemas/PortfolioValuationView'
        fixedDeposits:
          type: array
          description: The term instruments held by the customer
          items:
            $ref: '#/components/schemas/TermInstrumentView'
        loans:
          type: array
          description: The loans held by the customer
          items:
            $ref: '#/components/schemas/TermInstrumentView'
        treasuryBills:
          type: array
          description: The discounted instruments held by the customer
          items:
            $ref: '#/components/schemas/TBillTransactionView'
        cashBalance:
          type: number
          description: The cash balance
          example: 100000
        cashPerc:
          type: number
          description: The percentage held as cash
          example: 10
        managementFeeRate:
          type: number
          description: The management fee rate
          example: 2
        performanceFeeRate:
          type: number
          description: The performance fee rate
          example: 10
        totalFees:
          type: number
          description: The total fees charged during this period
          example: 10000
        cashInflow:
          type: number
          description: The cash inflow during this period
          example: 10000
        cashOutflow:
          type: number
          description: The cash outflow during this period
          example: 10000
        refReturnRate:
          type: number
          description: The reference rate used in calculating the excess performance
          example: 12
        taxRate:
          type: number
          description: The percentage tax rate
          example: 15
        totalPortfolioValue:
          type: number
          description: The total portfolio value
          example: 1000000
        totalPortfolioCost:
          type: number
          description: The total portfolio cost
          example: 1000000
        totalPortfolioReturn:
          type: number
          description: The total portfolio return
          example: 10000
        totalPortfolioReturnPerc:
          type: number
          description: The total portfolio percentage return
          example: 10
        totalFixedDepositValue:
          type: number
          description: The total fixed deposit value
          example: 1000000
        totalTBillValue:
          type: number
          description: The total discounted instrument value
          example: 1000000
        totalTBillDiscountedValue:
          type: number
          description: The total discounted value for discounted instruments
          example: 9000000
        totalTBillMaturityValue:
          type: number
          description: The total maturity value for discounted instruments
          example: 10000000
        totalTBillInterestValue:
          type: number
          description: The total interest for discounted instruments
          example: 100000
        totalFixedDepositPrincipal:
          type: number
          description: The total principal for fixed deposit products
          example: 10000000
        totalFixedDepositIncome:
          type: number
          description: The total fixed deposit income
          example: 10000000
        totalLoanExpense:
          type: number
          description: The total loan expense
          example: 0
        totalLoanPrincipal:
          type: number
          description: The total loan principal
          example: 0
        totalLoanValue:
          type: number
          description: The total loan value
          example: 0
        netAssetValue:
          type: number
          description: The net asset value
          example: 10000000
        currency:
          type: string
          description: The valuation currency
          example: NGN
        valuationDateForFI:
          type: string
          format: date-time
    PortfolioValuationView:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        securityId:
          type: integer
          description: The security ID
          format: int64
          example: 10000
        companyName:
          type: string
          description: The company name
          example: Access Bank Plc.
        symbol:
          type: string
          description: The company symbol
          example: ACCESS
        sector:
          type: string
          description: The sector
          example: BANKING
        assetClass:
          type: string
          description: The asset class
          example: EQUITY
        assetCategory:
          type: string
          description: The asset category
          example: EQUITY
        marketPrice:
          type: number
          description: The current market price
          example: 10
        dailyIncome:
          type: number
          description: The daily income
          example: 10
        marketPriceLC:
          type: number
          description: The market price in local currency
          example: 10
        marketPriceFC:
          type: number
          description: The market price in foreign currency
          example: 10
        quantity:
          type: number
          description: The quantity held
          example: 1000
        pendingBonus:
          type: number
          description: The pending bonus
          example: 1000
        pendingDividends:
          type: number
          description: The pending dividend
          example: 1000
        unitCost:
          type: number
          description: The unit cost
          example: 1000
        portPercentage:
          type: number
          description: The portfolio percent
          example: 10
        invstCurrency:
          type: string
          description: The investment currency
          example: NGN
        conversionRate:
          type: number
          description: The conversion rate used for valuation
          example: 500
        issueDate:
          type: string
          description: The issue date (bonds)
          format: date-time
        lastCouponDate:
          type: string
          description: The last coupon date (bonds)
          format: date-time
        maturityDate:
          type: string
          description: The maturity date (bonds)
          format: date-time
        maturityYears:
          type: number
          description: The issue years (bonds)
          example: 20
        dayConvention:
          type: string
          description: The day count convention  (bonds)
          example: Y365
        amortizationPeriod:
          type: string
          description: The amortization period  (bonds)
          example: '300'
        investmentCurrency:
          type: string
          description: The investment currency (bonds)
          example: NGN
        investedAmount:
          type: number
          description: The invested amount
          example: 1000000
        investedAmountReport:
          type: number
          description: The invested amount reported (bonds)
          example: 1000000
        couponType:
          type: string
          description: The coupon type (bonds)
          example: BULLET
        rateType:
          type: string
          description: The fixed rate type (bonds)
          example: SEMI_ANNUAL
        variableRateType:
          type: string
          description: The variable rate type (bonds)
          example: SEMI_ANNUAL
        witholdingTaxRate:
          type: number
          description: The withholding tax rate type (bonds)
          example: 10
        effectiveCouponRate:
          type: number
          description: The effective coupon rate type (bonds)
          example: 10
        yieldToMaturity:
          type: number
          description: The yield to maturity  (bonds)
          example: 10
        currentYield:
          type: number
          description: The current yield  (bonds)
          example: 10
        nextCouponDate:
          type: string
          description: The next coupon date
          format: date-time
        effectiveSwapCouponRate:
          type: number
          description: The effective swap coupon rate type (bonds)
          example: 10
        swapVariableRateType:
          type: string
          description: The swap variable coupon rate type (bonds)
          example: '10'
        feeRate:
          type: number
          description: The fee rate (bonds)
          example: 10
        bondCleanPrice:
          type: number
          description: The clean price (bonds)
          example: 100
        bondDirtyPrice:
          type: number
          description: The dirty price (bonds)
          example: 101
        bondCleanValue:
          type: number
          description: The clean value (bonds)
          example: 10000
        bondDirtyValue:
          type: number
          description: The dirty value (bonds)
          example: 101000
        bondAccruedCoupon:
          type: number
          description: The accrued coupon (bonds)
          example: 10000
        bondFaceValue:
          type: number
          description: The face value (bonds)
          example: 100000
        lcSpotRate:
          type: number
          description: The LC spot rate (bonds)
          example: 10
        fcSpotRate:
          type: number
          description: The FC spot rate (bonds)
          example: 10
        lcSpotValue:
          type: number
          description: The LC spot value (bonds)
          example: 10
        fcSpotValue:
          type: number
          description: The FC spot rate (bonds)
          example: 10
        fcCurrValue:
          type: number
          description: The FC value (bonds)
          example: 10
        fcSpotOutstanding:
          type: number
          description: The FC spot outstanding (bonds)
          example: 10
        lcOutstanding:
          type: number
          description: The LC outstanding (bonds)
          example: 10
        currentSpotRate:
          type: number
          description: The current spot rate (bonds)
          example: 10
        duration:
          type: number
          description: The duration (bonds)
          example: 10
        modifiedDuration:
          type: number
          description: The modified duration (bonds)
          example: 10
        carryingValue:
          type: number
          description: The carrying value (bonds)
          example: 10
        carryingValueCcy:
          type: string
          description: The carrying value currency (bonds)
          example: NGN
        currentValue:
          type: number
        totalUnitsHeld:
          type: number
        totalPurchaseCost:
          type: number
        totalGainLoss:
          type: number
        totalGainLossPercent:
          type: number
        netPosition:
          type: number
        currentValueLC:
          type: number
        currentValueFC:
          type: number
      description: The portfolios held by the customer
    TBillTransactionView:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        customerId:
          type: integer
          description: The customer ID
          format: int64
          example: 1000
        customerLabel:
          type: string
          description: The customer label
          example: John Smith
        type:
          type: string
          description: The type of discounted instrument
          example: TBILL
        typeId:
          type: integer
          description: The ID of the instrument type
          format: int64
          example: 10000
        typeLabel:
          type: string
          description: The label of the instrument type
          example: '10000'
        productCategory:
          type: string
          description: The product category
          example: Treasury Bills
        counterParty:
          type: string
          description: The counter party
          example: Access Bank
        startDate:
          type: string
          description: The start date
          format: date-time
        tenure:
          type: integer
          description: The tenor
          format: int32
          example: 180
        basis:
          type: integer
          description: The basis
          format: int32
          example: 365
        maturityDate:
          type: string
          description: The maturity date
          format: date-time
        invstCurrency:
          type: string
          description: The investment currency
          example: NGN
        conversionRate:
          type: number
          description: The conversion rate used for valuation
          example: 500
        faceValue:
          $ref: '#/components/schemas/Money'
        investedAmount:
          $ref: '#/components/schemas/Money'
        maturityValue:
          $ref: '#/components/schemas/Money'
        interestRate:
          type: number
          description: The interest rate
          example: 10
        discountRate:
          type: number
          description: The discount rate
          example: 10
        reDiscountRate:
          type: number
          description: The re discount rate
          example: 10
        discountedValue:
          $ref: '#/components/schemas/Money'
        reDiscountedValue:
          $ref: '#/components/schemas/Money'
        reDiscountedFaceValue:
          $ref: '#/components/schemas/Money'
        contractCommissionFxdAmt:
          $ref: '#/components/schemas/Money'
        contractCommissionRate:
          type: number
          description: The contract commission variable rate percent
          example: 10
        contractCommissionRateType:
          type: string
          description: The contract commission rate type
          example: ANNUALIZED
          enum:
            - DISCOUNTED_ANNUALIZED
            - ANNUALIZED
            - FIXED_RATE
            - DISCOUNTED_FIXED_RATE
            - INTEREST
        contractCommissionVarAmount:
          $ref: '#/components/schemas/Money'
        dealerCommissionFxdAmount:
          $ref: '#/components/schemas/Money'
        dealerCommissionRate:
          type: number
          description: The dealer commission variable rate percent
          example: 10
        dealerCommissionRateType:
          type: string
          description: The dealer commission rate type
          example: ANNUALIZED
          enum:
            - DISCOUNTED_ANNUALIZED
            - ANNUALIZED
            - FIXED_RATE
            - DISCOUNTED_FIXED_RATE
            - INTEREST
        dealerCommissionVarAmount:
          $ref: '#/components/schemas/Money'
        dealerCommissionVatRate:
          type: number
          description: The dealer commission VAT rate percent
          example: 10
        dealerCommissionVatAmount:
          $ref: '#/components/schemas/Money'
        agentCommissionFxdAmount:
          $ref: '#/components/schemas/Money'
        agentCommissionVariableAmount:
          $ref: '#/components/schemas/Money'
        agentCommissionVatAmount:
          $ref: '#/components/schemas/Money'
        carryingValue:
          $ref: '#/components/schemas/Money'
        valueDate:
          type: string
          description: The value date
          format: date-time
        duration:
          type: number
        dailyIncome:
          $ref: '#/components/schemas/Money'
        discount:
          $ref: '#/components/schemas/Money'
        bookingYield:
          type: number
        modifiedDuration:
          type: number
        interestAccrued:
          $ref: '#/components/schemas/Money'
        lastRateValue:
          type: number
        expectedMaturity:
          type: string
          format: date-time
        dealerCommissionTotal:
          $ref: '#/components/schemas/Money'
        contractCommissionTotal:
          $ref: '#/components/schemas/Money'
        valueAsAtDate:
          $ref: '#/components/schemas/Money'
        agentCommissionTotal:
          $ref: '#/components/schemas/Money'
        reportAccruedInterest:
          $ref: '#/components/schemas/Money'
        reportCurrentValue:
          $ref: '#/components/schemas/Money'
        daysToMaturity:
          type: integer
          format: int32
        reportFaceValue:
          $ref: '#/components/schemas/Money'
        amountPaid:
          $ref: '#/components/schemas/Money'
        netReturn:
          $ref: '#/components/schemas/Money'
        effectiveDiscount:
          type: number
        effectiveYield:
          type: number
        daysSpent:
          type: integer
          format: int32
        daysLeft:
          type: integer
          format: int32
        interestAccruedFromPartialDiscount:
          $ref: '#/components/schemas/Money'
        profitFromPartialDiscount:
          $ref: '#/components/schemas/Money'
      description: The discounted instruments held by the customer
    TermInstrumentView:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        instrumentId:
          type: integer
          description: The instrument ID
          format: int64
          example: 1000
        typeId:
          type: integer
          description: The instrument type ID
          format: int64
          example: 1000
        productCode:
          type: string
          description: The product code
          example: '000001'
        productLabel:
          type: string
          description: The product label
          example: Fixed Deposits
        productCategory:
          type: string
          description: The product category
          example: Family Savings
        counterParty:
          type: string
          description: The counter party
          example: John Smith
        bookingNumber:
          type: string
          description: The booking number
          example: '000000001'
        interestLessTaxes:
          $ref: '#/components/schemas/Money'
        grossInterest:
          $ref: '#/components/schemas/Money'
        expectedInterest:
          $ref: '#/components/schemas/Money'
        principalBalance:
          $ref: '#/components/schemas/Money'
        netInstrumentValue:
          $ref: '#/components/schemas/Money'
        carryingValue:
          $ref: '#/components/schemas/Money'
        dailyIncome:
          $ref: '#/components/schemas/Money'
        startDate:
          type: string
          description: The start date
          format: date-time
        tenor:
          type: integer
          description: The tenor
          format: int32
          example: 365
        maturityDate:
          type: string
          description: The maturity start
          format: date-time
        valuationDate:
          type: string
          description: The valuation date
          format: date-time
        valuationCurrency:
          type: string
          description: The valuation currency
          example: USD
        invstCurrency:
          type: string
          description: The investment currency
          example: NGN
        conversionRate:
          type: number
          description: The conversion rate used for valuation
          example: 500
        interestRate:
          type: number
          description: The interest rate
          example: 10
        taxRate:
          type: number
          description: The tax rate
          example: 10
        interestRateDays:
          type: string
          description: The interest calculation day basis
          example: Y365
        daysToMaturity:
          type: integer
          format: int32
      description: The loans held by the customer
    MCustomerTO:
      type: object
      properties:
        count:
          type: integer
          description: The number of records
          format: int32
          example: 100
        results:
          type: array
          description: The customers
          items:
            $ref: '#/components/schemas/MCustomer'
    MFiLedger:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        entryType:
          type: string
          description: The entry type
          example: TRADE
        businessOfficeId:
          type: integer
          description: The business office ID
          format: int64
          example: 10000
        journalNo:
          type: string
          description: 'The journal #'
          example: '10000'
        accountId:
          type: integer
          description: The account ID
          format: int64
          example: 10000
        parentAccountId:
          type: integer
          description: The parent account ID
          format: int64
          example: 10000
        accountNo:
          type: string
          description: The account number
          example: '100002000'
        refAccountNo:
          type: string
          description: The reference account number. This maps to any reference account number from the chart of accounts that is maintained in the 'refName2' field
          example: INT-100002000
        parentAccountNo:
          type: string
          description: The parent account number
          example: '10000'
        accountLabel:
          type: string
          description: The account label
          example: John Smith (Default)
        currency:
          type: string
          description: The currency
          example: NGN
        debitAmount:
          type: number
          description: The debit amount
          example: 10000
        creditAmount:
          type: number
          description: The credit amount
          example: 0
        balance:
          type: number
          description: The balance
          example: 10000
        transactionDate:
          type: string
          description: The transaction date
          format: date-time
        valueDate:
          type: string
          description: The value date
          format: date-time
        reversalDate:
          type: string
          description: The reversal date
          format: date-time
    MValuation:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        customer:
          type: string
          description: The customer code
          example: '100000'
        periodStart:
          type: string
          description: The period start
          format: date-time
        valuationDate:
          type: string
          description: The valuation date
          format: date-time
        currency:
          type: string
          description: The valuation currency
          example: NGN
        equityValuation:
          type: number
          description: The equity valuation
          example: 100000
        inflows:
          type: number
          description: The inflows
          example: 100000
        outflows:
          type: number
          description: The outflows
          example: 100000
        bondValuation:
          type: number
          description: The bond valuation
          example: 100000
        realEstateValuation:
          type: number
          description: The real estate valuation
          example: 100000
        fundValuation:
          type: number
          description: The fund valuation
          example: 100000
        moneyMarketValuation:
          type: number
          description: The money market valuation
          example: 100000
        cashBalance:
          type: number
          description: The cash balance
          example: 100000
        grossAssetValue:
          type: number
          description: The gross asset value
          example: 100000
        managementFees:
          type: number
          description: The management fees
          example: 100000
        otherLiabilities:
          type: number
          description: The other liabilities
          example: 0
        startingGAV:
          type: number
          description: The starting gross asset value
          example: 100000
        startingNAV:
          type: number
          description: The starting net asset value
          example: 100000
        endingGAV:
          type: number
          description: The ending gross asset value
          example: 100000
        endingNAV:
          type: number
          description: The ending net asset value
          example: 100000
        fundDividend:
          type: number
          description: The fund dividend
          example: 100000
        equityDividend:
          type: number
          description: The equity dividend
          example: 100000
      description: The valuation records
    MValuationTO:
      type: object
      properties:
        count:
          type: integer
          description: The number of records
          format: int32
          example: 100
        results:
          type: array
          description: The valuation records
          items:
            $ref: '#/components/schemas/MValuation'
    MFiAcctBalance:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The account code
          example: '20000000'
        label:
          type: string
          description: The account label
          example: John Smith (Default)
        description:
          type: string
          description: The record description
          example: Notes on record
        currency:
          type: string
          description: The account currency
          example: NGN
        amount:
          type: number
          description: The cleared balance
          example: 1000000
    MTradeOrderTO:
      type: object
      properties:
        count:
          type: integer
          description: The number of records
          format: int32
          example: 100
        results:
          type: array
          description: The orders
          items:
            $ref: '#/components/schemas/MTradeOrder'
    MTradeContractNote:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        clearingType:
          type: string
          description: The clearing type
          example: REAL_TIME
        product:
          type: string
          description: The product
          example: EQUITY
        portfolioId:
          type: integer
          description: The portfolio ID
          format: int64
          example: 10000
        tradeOrderId:
          type: integer
          description: The order ID
          format: int64
          example: 10000
        tradeOrderName:
          type: string
          description: The order code
          example: '0000001'
        symbol:
          type: string
          description: The symbol or security ID
          example: ACCESS
        portfolioName:
          type: string
          description: The portfolio code
          example: '000000001'
        portfolioAccountNo:
          type: string
          description: The portfolio trading account number
          example: '11224310000'
        securityId:
          type: integer
          description: The security ID
          format: int64
          example: 10000
        customerId:
          type: integer
          description: The customer ID
          format: int64
          example: 10000
        orderType:
          type: string
          description: The order type
          example: BUY
        orderOrigin:
          type: string
          description: The order origin
          example: WEB
        tradingDeskCode:
          type: string
          description: The trading desk code
          example: OFFICE
        transactionDate:
          type: string
          description: The transaction date
          format: date-time
        settlementDate:
          type: string
          description: The settlement date
          format: date-time
        quantity:
          type: number
          description: The traded quantity
          example: 100
        contractCurrency:
          type: string
          description: The contract currency
          example: NGN
        contractPrice:
          type: number
          description: The contract price
          example: 100
        consideration:
          type: number
          description: The contract consideration
          example: 10000
        commissionRate:
          type: number
          description: The contract commission rate
          example: 1.25
        commissionCharge:
          type: number
          description: The contract commission charge
          example: 1250
        contractAmount:
          type: number
          description: The contract amount
          example: 120000
        contractFee:
          type: number
          description: The contract fees
          example: 2000
        faceValue:
          type: number
          description: The contract face value for bonds
          example: 10000
        issuersName:
          type: string
          description: The contract issuer name for bonds
          example: '10000'
        reversed:
          type: boolean
          description: Indicates if the note was reversed
          example: false
        agentCommission:
          type: number
          description: The agent commission
          example: 10000
        agentCommissionRate:
          type: number
          description: The agent commission rate
          example: 50
        fees:
          type: array
          description: The contract note fee schedule
          items:
            $ref: '#/components/schemas/MTradeContractNoteFee'
    MTradeContractNoteFee:
      type: object
      properties:
        id:
          type: integer
          description: The record ID
          format: int64
          example: 1000
        active:
          type: boolean
          description: Flag to indicate if this is an active record
          example: true
        name:
          type: string
          description: The record number (business key)
          example: '0000000001'
        label:
          type: string
          description: The record label
          example: Record Label
        description:
          type: string
          description: The record description
          example: Notes on record
        feeName:
          type: string
          description: The fee name
          example: CDS
        feeAmount:
          type: number
          description: The fee amount
          example: 100
      description: The contract note fee schedule
    MTradeContractNoteTO:
      type: object
      properties:
        count:
          type: integer
          description: The number of records
          format: int32
          example: 100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MTradeContractNote'
    ContactTOWS:
      type: object
      properties:
        count:
          type: integer
          description: The number of records
          format: int32
        result:
          type: array
          description: The records in the list
          items:
            $ref: '#/components/schemas/ContactWS'
    CaseTOWS:
      type: object
      properties:
        count:
          type: integer
          description: The number of records
          format: int32
        result:
          type: array
          description: The records in the list
          items:
            $ref: '#/components/schemas/CaseWS'
